{"1025_A. Doggo Recoloring": {"O(1)": {"problem_name": "1025_A. Doggo Recoloring", "problem_id": "653", "solution_id": "653_39", "description": "Panic is rising in the committee for doggo standardization \u2014 the puppies of the new brood have been born multi-colored! In total there are 26 possible colors of puppies in the nature and they are denoted by letters from 'a' to 'z' inclusive.\n\nThe committee rules strictly prohibit even the smallest diversity between doggos and hence all the puppies should be of the same color. Thus Slava, the committee employee, has been assigned the task to recolor some puppies into other colors in order to eliminate the difference and make all the puppies have one common color.\n\nUnfortunately, due to bureaucratic reasons and restricted budget, there's only one operation Slava can perform: he can choose a color x such that there are currently at least two puppies of color x and recolor all puppies of the color x into some arbitrary color y. Luckily, this operation can be applied multiple times (including zero).\n\nFor example, if the number of puppies is 7 and their colors are represented as the string \"abababc\", then in one operation Slava can get the results \"zbzbzbc\", \"bbbbbbc\", \"aaaaaac\", \"acacacc\" and others. However, if the current color sequence is \"abababc\", then he can't choose x='c' right now, because currently only one puppy has the color 'c'.\n\nHelp Slava and the committee determine whether it is possible to standardize all the puppies, i.e. after Slava's operations all the puppies should have the same color.\n\nInput\n\nThe first line contains a single integer n (1 \u2264 n \u2264 10^5) \u2014 the number of puppies.\n\nThe second line contains a string s of length n consisting of lowercase Latin letters, where the i-th symbol denotes the i-th puppy's color.\n\nOutput\n\nIf it's possible to recolor all puppies into one color, print \"Yes\".\n\nOtherwise print \"No\".\n\nOutput the answer without quotation signs.\n\nExamples\n\nInput\n\n6\naabddc\n\n\nOutput\n\nYes\n\n\nInput\n\n3\nabc\n\n\nOutput\n\nNo\n\n\nInput\n\n3\njjj\n\n\nOutput\n\nYes\n\nNote\n\nIn the first example Slava can perform the following steps: \n\n  1. take all puppies of color 'a' (a total of two) and recolor them into 'b'; \n  2. take all puppies of color 'd' (a total of two) and recolor them into 'c'; \n  3. take all puppies of color 'b' (three puppies for now) and recolor them into 'c'. \n\n\n\nIn the second example it's impossible to recolor any of the puppies.\n\nIn the third example all the puppies' colors are the same; thus there's no need to recolor anything.", "solution_code": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun Aug 19 21:52:02 2018\n\n@author: Duy SoCiu\n\"\"\"\n\ndef a():\n    n=int(int(input()))\n    if(n==1):\n        print('YES')\n        return\n    a=input()\n    b=list(set(a))\n    c=sum(a.count(b[i])>1 for i in range(len(b)))\n    #d=sum(a.count(b[i])==1 for i in range(len(b)))\n    print(['NO','YES'][c>0])\na()", "dataclass_code": "import sys\nimport time\nimport itertools\nfrom itertools import accumulate, product, permutations, combinations\nimport collections\nfrom collections import Counter, OrderedDict, deque, defaultdict, ChainMap\nfrom functools import lru_cache\nimport math\nfrom math import sqrt, sin, cos, tan, ceil, fabs, floor, gcd, exp, log, log2\nimport fractions\nfrom typing import List, Tuple\nimport numpy as np\nimport random\nimport heapq\nfrom heapq import *\nfrom dataclasses import dataclass\n\nimport builtins\nimport re\n\ndef strip(s, characters = None):\n    if characters is None:\n        characters = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n    else:\n        characters = list(characters)\n\n    characters = [x for x in characters if len(x) > 0] \n\n    i = 0\n    while i < len(s):\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[i:i + len(sep_candidate)] == sep_candidate:\n                found_sep_candidate = True\n                i += len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    j = len(s) - 1\n    while j >= 0:\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[j + 1 - len(sep_candidate):j+1] == sep_candidate:\n                found_sep_candidate = True\n                j -= len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    return s[i:j+1]\n\ndef split(s, sep=None, maxsplit=-1):\n    if sep == '':\n        raise builtins.ValueError('empty separator')\n\n    if type(sep) == list and '' in sep:\n        raise builtins.ValueError('empty separator')\n\n    if sep is None:\n        sep = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n        result = []\n        word = ''\n        count_split = 0\n        \n        if maxsplit == -1:\n            maxsplit = len(s) * 1000\n\n        i = 0\n        while i < len(s):\n            found_sep_candidate = False\n\n            for sep_candidate in sep:\n                if s[i:i + len(sep_candidate)] == sep_candidate:\n                    found_sep_candidate = True\n\n                    if word:\n                        result.append(word)\n                        count_split += 1\n                        word = ''\n\n                    i += len(sep_candidate)\n                    break\n\n            if not found_sep_candidate and count_split < maxsplit:\n                word += s[i]\n                i += 1\n\n            elif not found_sep_candidate and count_split >= maxsplit:\n                word += s[i:]\n                i = len(s)\n\n        if word:\n            result.append(word)\n        return result\n    \n    if type(sep) == str:\n        sep = [sep]\n\n    if maxsplit == -1:\n        maxsplit = 0\n    elif maxsplit == 0:\n        maxsplit = -1\n\n    return re.split(re.compile(\"|\".join([re.escape(x) for x in sep])), s, maxsplit=maxsplit)\n\nclass str_escaped(str):\n    def split(self, sep=None, maxsplit=-1):\n        return split(self, sep=sep, maxsplit=maxsplit)\n    \n    def strip(self, chars=None):\n        return strip(self, characters = chars)\n\nfrom dataclasses import dataclass\n\n@dataclass\nclass Input:\n    n: int\n    s: str\n\n    @classmethod\n    def from_str(cls, input_: str):\n        n, s, _ = input_.split('\\n')\n        n = int(n)\n        return cls(n, s)\n\n    def __repr__(self):\n        return str(self.n) + '\\n' + self.s + '\\n'\n", "inputs_example": "6\naabddc\n", "space_complexity_inferred": "O(1)", "space_curve_coefficient": 1126.0, "tests": {"public_tests": [{"input": "6\naabddc\n", "output": "Yes\n"}, {"input": "3\nabc\n", "output": "No\n"}, {"input": "3\njjj\n", "output": "Yes\n"}], "private_tests": [{"input": "4\nabcc\n", "output": "Yes\n"}, {"input": "6\nabcdee\n", "output": "Yes\n"}, {"input": "3\nzza\n", "output": "Yes\n"}, {"input": "3\ngcw\n", "output": "No\n"}, {"input": "27\nabcdefghijklmnopqrstuvwxyza\n", "output": "Yes\n"}, {"input": "27\nmnpsweykjdvaxyiqtgcuzhbfrlo\n", "output": "Yes\n"}, {"input": "5\naabcd\n", "output": "Yes\n"}, {"input": "2\nba\n", "output": "No\n"}, {"input": "7\nkssssss\n", "output": "Yes\n"}, {"input": "1\ne\n", "output": "Yes\n"}, {"input": "5\nfnfvn\n", "output": "Yes\n"}, {"input": "3\naba\n", "output": "Yes\n"}, {"input": "4\nabca\n", "output": "Yes\n"}, {"input": "4\naabc\n", "output": "Yes\n"}, {"input": "15\nnrnuugruronnsur\n", "output": "Yes\n"}, {"input": "5\nabvca\n", "output": "Yes\n"}, {"input": "6\naabcde\n", "output": "Yes\n"}, {"input": "2\nzz\n", "output": "Yes\n"}, {"input": "10\nuyouuzyyrb\n", "output": "Yes\n"}, {"input": "2\naa\n", "output": "Yes\n"}, {"input": "9\nabcdefghh\n", "output": "Yes\n"}, {"input": "4\nabab\n", "output": "Yes\n"}, {"input": "26\nadtopxgnculmhfkezrwsvqbiyj\n", "output": "No\n"}, {"input": "1\nd\n", "output": "Yes\n"}, {"input": "3\naaa\n", "output": "Yes\n"}, {"input": "10\naabcdefghi\n", "output": "Yes\n"}, {"input": "2\naz\n", "output": "No\n"}], "generated_tests": [{"input": "6\nabceee\n", "output": "YES\n"}, {"input": "3\nhcw\n", "output": "NO\n"}, {"input": "3\nazz\n", "output": "YES\n"}, {"input": "27\nazyxwvutsrqponmlkjihgfedcba\n", "output": "YES\n"}, {"input": "27\nmbpsweykjdvaxyiqtgcuzhnfrlo\n", "output": "YES\n"}, {"input": "5\nabacd\n", "output": "YES\n"}, {"input": "2\nca\n", "output": "NO\n"}, {"input": "7\nkssssrs\n", "output": "YES\n"}, {"input": "1\nc\n", "output": "YES\n"}, {"input": "5\ngnfvn\n", "output": "YES\n"}, {"input": "4\nacba\n", "output": "YES\n"}, {"input": "15\nnrnuugruronntur\n", "output": "YES\n"}, {"input": "5\nacvba\n", "output": "YES\n"}, {"input": "6\naabbde\n", "output": "YES\n"}, {"input": "10\nuzouuyyyrb\n", "output": "YES\n"}, {"input": "9\nabcdffghh\n", "output": "YES\n"}, {"input": "1\nf\n", "output": "YES\n"}, {"input": "3\nbaa\n", "output": "YES\n"}, {"input": "10\nihgfedcbaa\n", "output": "YES\n"}, {"input": "2\nay\n", "output": "NO\n"}, {"input": "6\ncddbaa\n", "output": "YES\n"}, {"input": "3\nacc\n", "output": "YES\n"}, {"input": "3\nkjj\n", "output": "YES\n"}, {"input": "6\neeecba\n", "output": "YES\n"}, {"input": "3\nwch\n", "output": "NO\n"}, {"input": "27\nayyxwvutsrqponmlkjihgfedcba\n", "output": "YES\n"}, {"input": "27\nmbpsweykjdvaxyirtgcuzhnfrlo\n", "output": "YES\n"}, {"input": "5\nabdca\n", "output": "YES\n"}, {"input": "2\nac\n", "output": "NO\n"}, {"input": "7\nsrssssk\n", "output": "YES\n"}, {"input": "1\nb\n", "output": "YES\n"}, {"input": "5\nnvfng\n", "output": "YES\n"}, {"input": "4\naacc\n", "output": "YES\n"}, {"input": "15\nnrnuugrvronntur\n", "output": "YES\n"}, {"input": "5\nacvaa\n", "output": "YES\n"}, {"input": "6\naabbed\n", "output": "YES\n"}, {"input": "10\nuzpuuyyyrb\n", "output": "YES\n"}, {"input": "9\nabcdffhhh\n", "output": "YES\n"}, {"input": "1\ng\n", "output": "YES\n"}, {"input": "3\ncaa\n", "output": "YES\n"}, {"input": "10\nihffedcbaa\n", "output": "YES\n"}, {"input": "2\nya\n", "output": "NO\n"}, {"input": "6\naabddb\n", "output": "YES\n"}, {"input": "3\nkjk\n", "output": "YES\n"}, {"input": "6\ndeecba\n", "output": "YES\n"}, {"input": "3\nwcg\n", "output": "NO\n"}, {"input": "27\nabcdefghijklmnopqrstuvwxyya\n", "output": "YES\n"}, {"input": "27\nmbpsweykjdvaxyirthcuzhnfrlo\n", "output": "YES\n"}, {"input": "5\nbadca\n", "output": "YES\n"}, {"input": "2\nab\n", "output": "NO\n"}, {"input": "7\nsrsssrk\n", "output": "YES\n"}, {"input": "1\na\n", "output": "YES\n"}, {"input": "5\ngfnvn\n", "output": "YES\n"}, {"input": "4\nccaa\n", "output": "YES\n"}, {"input": "15\nnrnuugrvroontur\n", "output": "YES\n"}, {"input": "10\nbryyyuupzu\n", "output": "YES\n"}, {"input": "9\nabcdffhih\n", "output": "YES\n"}, {"input": "1\nh\n", "output": "YES\n"}, {"input": "10\nihffeecbaa\n", "output": "YES\n"}, {"input": "6\nadbdab\n", "output": "YES\n"}, {"input": "3\nljk\n", "output": "NO\n"}, {"input": "6\nddecba\n", "output": "YES\n"}, {"input": "3\ncwg\n", "output": "NO\n"}, {"input": "27\nayyxwvutirqponmlkjshgfedcba\n", "output": "YES\n"}, {"input": "27\nmbpsweykjdvaxyirtgduzhnfrlo\n", "output": "YES\n"}, {"input": "5\nbaacd\n", "output": "YES\n"}, {"input": "7\nsrrssrk\n", "output": "YES\n"}, {"input": "5\nnvnfg\n", "output": "YES\n"}, {"input": "15\nrutnoorvrguunrn\n", "output": "YES\n"}, {"input": "10\nbryyyuuqzu\n", "output": "YES\n"}, {"input": "9\nabcdfghih\n", "output": "YES\n"}, {"input": "1\ni\n", "output": "YES\n"}, {"input": "10\nihffeebbaa\n", "output": "YES\n"}, {"input": "6\nadbdac\n", "output": "YES\n"}, {"input": "3\nkkj\n", "output": "YES\n"}, {"input": "6\nabcedd\n", "output": "YES\n"}, {"input": "3\nvch\n", "output": "NO\n"}, {"input": "27\nabcdefghsjklmnopqrituvwxyya\n", "output": "YES\n"}, {"input": "27\nmbpsweykadvjxyirtgduzhnfrlo\n", "output": "YES\n"}, {"input": "5\nbaace\n", "output": "YES\n"}, {"input": "7\nsrrrssk\n", "output": "YES\n"}, {"input": "5\novnfg\n", "output": "NO\n"}, {"input": "15\nrutnoorvrguunqn\n", "output": "YES\n"}, {"input": "10\nuzquuyyyrb\n", "output": "YES\n"}, {"input": "9\nfbcdaghih\n", "output": "YES\n"}, {"input": "1\nj\n", "output": "YES\n"}]}, "problem_space_curve_coefficient_list": [3568.0, 3299.0, 2848.0, 2827.0, 2576.0, 2137.0, 2100.0, 2091.0, 2085.0, 2084.0, 2084.0, 2084.0, 2048.0, 2048.0, 2048.0, 2048.0, 2048.0, 2048.0, 2048.0, 2048.0, 2048.0, 2048.0, 2048.0, 2048.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 1996.0, 1995.0, 1928.0, 1928.0, 1849.0, 1821.0, 1821.0, 1813.0, 1785.0, 1763.0, 1763.0, 1752.0, 1721.0, 1713.0, 1672.0, 1654.0, 1649.0, 1649.0, 1649.0, 1649.0, 1649.0, 1649.0, 1649.0, 1649.0, 1649.0, 1649.0, 1649.0, 1600.0, 1596.0, 1596.0, 1596.0, 1590.0, 1543.0, 1536.0, 1536.0, 1536.0, 1536.0, 1536.0, 1344.0, 1302.0, 1129.0, 1126.0, 1121.0, 1121.0, 1121.0, 1121.0, 1121.0, 1109.0, 1080.0, 1066.0, 1057.0, 1057.0, 1057.0, 1057.0, 1057.0, 1057.0, 1057.0, 1028.0, 1008.0, 1002.0, 977.0, 976.0, 976.0, 976.0, 933.0, 888.0, 888.0, 880.0, 880.0, 880.0, 880.0, 869.0, 868.0, 857.0, 840.0, 839.0, 816.0, 816.0, 816.0, 816.0, 816.0, 816.0, 816.0, 816.0, 816.0, 816.0, 816.0, 816.0, 816.0, 816.0, 816.0, 816.0, 816.0, 800.0, 357.0, 296.0, 111.0, 111.0, 111.0, 111.0, 105.0, 105.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 54.0, 54.0, 54.0, 54.0, 54.0, 53.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 48.0, 7.0], "human_label": true, "framework_note": ""}, "O(n)": {"problem_name": "1025_A. Doggo Recoloring", "problem_id": "653", "solution_id": "653_332", "description": "Panic is rising in the committee for doggo standardization \u2014 the puppies of the new brood have been born multi-colored! In total there are 26 possible colors of puppies in the nature and they are denoted by letters from 'a' to 'z' inclusive.\n\nThe committee rules strictly prohibit even the smallest diversity between doggos and hence all the puppies should be of the same color. Thus Slava, the committee employee, has been assigned the task to recolor some puppies into other colors in order to eliminate the difference and make all the puppies have one common color.\n\nUnfortunately, due to bureaucratic reasons and restricted budget, there's only one operation Slava can perform: he can choose a color x such that there are currently at least two puppies of color x and recolor all puppies of the color x into some arbitrary color y. Luckily, this operation can be applied multiple times (including zero).\n\nFor example, if the number of puppies is 7 and their colors are represented as the string \"abababc\", then in one operation Slava can get the results \"zbzbzbc\", \"bbbbbbc\", \"aaaaaac\", \"acacacc\" and others. However, if the current color sequence is \"abababc\", then he can't choose x='c' right now, because currently only one puppy has the color 'c'.\n\nHelp Slava and the committee determine whether it is possible to standardize all the puppies, i.e. after Slava's operations all the puppies should have the same color.\n\nInput\n\nThe first line contains a single integer n (1 \u2264 n \u2264 10^5) \u2014 the number of puppies.\n\nThe second line contains a string s of length n consisting of lowercase Latin letters, where the i-th symbol denotes the i-th puppy's color.\n\nOutput\n\nIf it's possible to recolor all puppies into one color, print \"Yes\".\n\nOtherwise print \"No\".\n\nOutput the answer without quotation signs.\n\nExamples\n\nInput\n\n6\naabddc\n\n\nOutput\n\nYes\n\n\nInput\n\n3\nabc\n\n\nOutput\n\nNo\n\n\nInput\n\n3\njjj\n\n\nOutput\n\nYes\n\nNote\n\nIn the first example Slava can perform the following steps: \n\n  1. take all puppies of color 'a' (a total of two) and recolor them into 'b'; \n  2. take all puppies of color 'd' (a total of two) and recolor them into 'c'; \n  3. take all puppies of color 'b' (three puppies for now) and recolor them into 'c'. \n\n\n\nIn the second example it's impossible to recolor any of the puppies.\n\nIn the third example all the puppies' colors are the same; thus there's no need to recolor anything.", "solution_code": "\n\nimport sys\n\ndef main():\n    n = input()\n    char = input()\n\n    colors = list(char)\n\n    if len(colors) != int(n):\n        print(\"No\")\n        return\n\n    if len(colors) == 1:\n        print(\"Yes\")\n        return\n    \n    temp = {}\n    for i in colors:\n        if i not in temp:\n            temp[i] = 1\n        else:\n            temp[i] += 1\n    \n    return_val = \"No\"\n    for color in temp:\n        if temp[color] >= 2:\n            return_val = \"Yes\"\n\n    print(return_val)\n    return\n\nmain()", "dataclass_code": "import sys\nimport time\nimport itertools\nfrom itertools import accumulate, product, permutations, combinations\nimport collections\nfrom collections import Counter, OrderedDict, deque, defaultdict, ChainMap\nfrom functools import lru_cache\nimport math\nfrom math import sqrt, sin, cos, tan, ceil, fabs, floor, gcd, exp, log, log2\nimport fractions\nfrom typing import List, Tuple\nimport numpy as np\nimport random\nimport heapq\nfrom heapq import *\nfrom dataclasses import dataclass\n\nimport builtins\nimport re\n\ndef strip(s, characters = None):\n    if characters is None:\n        characters = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n    else:\n        characters = list(characters)\n\n    characters = [x for x in characters if len(x) > 0] \n\n    i = 0\n    while i < len(s):\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[i:i + len(sep_candidate)] == sep_candidate:\n                found_sep_candidate = True\n                i += len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    j = len(s) - 1\n    while j >= 0:\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[j + 1 - len(sep_candidate):j+1] == sep_candidate:\n                found_sep_candidate = True\n                j -= len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    return s[i:j+1]\n\ndef split(s, sep=None, maxsplit=-1):\n    if sep == '':\n        raise builtins.ValueError('empty separator')\n\n    if type(sep) == list and '' in sep:\n        raise builtins.ValueError('empty separator')\n\n    if sep is None:\n        sep = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n        result = []\n        word = ''\n        count_split = 0\n        \n        if maxsplit == -1:\n            maxsplit = len(s) * 1000\n\n        i = 0\n        while i < len(s):\n            found_sep_candidate = False\n\n            for sep_candidate in sep:\n                if s[i:i + len(sep_candidate)] == sep_candidate:\n                    found_sep_candidate = True\n\n                    if word:\n                        result.append(word)\n                        count_split += 1\n                        word = ''\n\n                    i += len(sep_candidate)\n                    break\n\n            if not found_sep_candidate and count_split < maxsplit:\n                word += s[i]\n                i += 1\n\n            elif not found_sep_candidate and count_split >= maxsplit:\n                word += s[i:]\n                i = len(s)\n\n        if word:\n            result.append(word)\n        return result\n    \n    if type(sep) == str:\n        sep = [sep]\n\n    if maxsplit == -1:\n        maxsplit = 0\n    elif maxsplit == 0:\n        maxsplit = -1\n\n    return re.split(re.compile(\"|\".join([re.escape(x) for x in sep])), s, maxsplit=maxsplit)\n\nclass str_escaped(str):\n    def split(self, sep=None, maxsplit=-1):\n        return split(self, sep=sep, maxsplit=maxsplit)\n    \n    def strip(self, chars=None):\n        return strip(self, characters = chars)\n\nfrom dataclasses import dataclass\n\n@dataclass\nclass Input:\n    n: int\n    s: str\n\n    @classmethod\n    def from_str(cls, input_: str):\n        n, s, _ = input_.split('\\n')\n        n = int(n)\n        return cls(n, s)\n\n    def __repr__(self):\n        return str(self.n) + '\\n' + self.s + '\\n'\n", "inputs_example": "6\naabddc\n", "space_complexity_inferred": "O(n)", "space_curve_coefficient": 47.9978010270979, "tests": {"public_tests": [{"input": "6\naabddc\n", "output": "Yes\n"}, {"input": "3\nabc\n", "output": "No\n"}, {"input": "3\njjj\n", "output": "Yes\n"}], "private_tests": [{"input": "4\nabcc\n", "output": "Yes\n"}, {"input": "6\nabcdee\n", "output": "Yes\n"}, {"input": "3\nzza\n", "output": "Yes\n"}, {"input": "3\ngcw\n", "output": "No\n"}, {"input": "27\nabcdefghijklmnopqrstuvwxyza\n", "output": "Yes\n"}, {"input": "27\nmnpsweykjdvaxyiqtgcuzhbfrlo\n", "output": "Yes\n"}, {"input": "5\naabcd\n", "output": "Yes\n"}, {"input": "2\nba\n", "output": "No\n"}, {"input": "7\nkssssss\n", "output": "Yes\n"}, {"input": "1\ne\n", "output": "Yes\n"}, {"input": "5\nfnfvn\n", "output": "Yes\n"}, {"input": "3\naba\n", "output": "Yes\n"}, {"input": "4\nabca\n", "output": "Yes\n"}, {"input": "4\naabc\n", "output": "Yes\n"}, {"input": "15\nnrnuugruronnsur\n", "output": "Yes\n"}, {"input": "5\nabvca\n", "output": "Yes\n"}, {"input": "6\naabcde\n", "output": "Yes\n"}, {"input": "2\nzz\n", "output": "Yes\n"}, {"input": "10\nuyouuzyyrb\n", "output": "Yes\n"}, {"input": "2\naa\n", "output": "Yes\n"}, {"input": "9\nabcdefghh\n", "output": "Yes\n"}, {"input": "4\nabab\n", "output": "Yes\n"}, {"input": "26\nadtopxgnculmhfkezrwsvqbiyj\n", "output": "No\n"}, {"input": "1\nd\n", "output": "Yes\n"}, {"input": "3\naaa\n", "output": "Yes\n"}, {"input": "10\naabcdefghi\n", "output": "Yes\n"}, {"input": "2\naz\n", "output": "No\n"}], "generated_tests": [{"input": "6\nabceee\n", "output": "YES\n"}, {"input": "3\nhcw\n", "output": "NO\n"}, {"input": "3\nazz\n", "output": "YES\n"}, {"input": "27\nazyxwvutsrqponmlkjihgfedcba\n", "output": "YES\n"}, {"input": "27\nmbpsweykjdvaxyiqtgcuzhnfrlo\n", "output": "YES\n"}, {"input": "5\nabacd\n", "output": "YES\n"}, {"input": "2\nca\n", "output": "NO\n"}, {"input": "7\nkssssrs\n", "output": "YES\n"}, {"input": "1\nc\n", "output": "YES\n"}, {"input": "5\ngnfvn\n", "output": "YES\n"}, {"input": "4\nacba\n", "output": "YES\n"}, {"input": "15\nnrnuugruronntur\n", "output": "YES\n"}, {"input": "5\nacvba\n", "output": "YES\n"}, {"input": "6\naabbde\n", "output": "YES\n"}, {"input": "10\nuzouuyyyrb\n", "output": "YES\n"}, {"input": "9\nabcdffghh\n", "output": "YES\n"}, {"input": "1\nf\n", "output": "YES\n"}, {"input": "3\nbaa\n", "output": "YES\n"}, {"input": "10\nihgfedcbaa\n", "output": "YES\n"}, {"input": "2\nay\n", "output": "NO\n"}, {"input": "6\ncddbaa\n", "output": "YES\n"}, {"input": "3\nacc\n", "output": "YES\n"}, {"input": "3\nkjj\n", "output": "YES\n"}, {"input": "6\neeecba\n", "output": "YES\n"}, {"input": "3\nwch\n", "output": "NO\n"}, {"input": "27\nayyxwvutsrqponmlkjihgfedcba\n", "output": "YES\n"}, {"input": "27\nmbpsweykjdvaxyirtgcuzhnfrlo\n", "output": "YES\n"}, {"input": "5\nabdca\n", "output": "YES\n"}, {"input": "2\nac\n", "output": "NO\n"}, {"input": "7\nsrssssk\n", "output": "YES\n"}, {"input": "1\nb\n", "output": "YES\n"}, {"input": "5\nnvfng\n", "output": "YES\n"}, {"input": "4\naacc\n", "output": "YES\n"}, {"input": "15\nnrnuugrvronntur\n", "output": "YES\n"}, {"input": "5\nacvaa\n", "output": "YES\n"}, {"input": "6\naabbed\n", "output": "YES\n"}, {"input": "10\nuzpuuyyyrb\n", "output": "YES\n"}, {"input": "9\nabcdffhhh\n", "output": "YES\n"}, {"input": "1\ng\n", "output": "YES\n"}, {"input": "3\ncaa\n", "output": "YES\n"}, {"input": "10\nihffedcbaa\n", "output": "YES\n"}, {"input": "2\nya\n", "output": "NO\n"}, {"input": "6\naabddb\n", "output": "YES\n"}, {"input": "3\nkjk\n", "output": "YES\n"}, {"input": "6\ndeecba\n", "output": "YES\n"}, {"input": "3\nwcg\n", "output": "NO\n"}, {"input": "27\nabcdefghijklmnopqrstuvwxyya\n", "output": "YES\n"}, {"input": "27\nmbpsweykjdvaxyirthcuzhnfrlo\n", "output": "YES\n"}, {"input": "5\nbadca\n", "output": "YES\n"}, {"input": "2\nab\n", "output": "NO\n"}, {"input": "7\nsrsssrk\n", "output": "YES\n"}, {"input": "1\na\n", "output": "YES\n"}, {"input": "5\ngfnvn\n", "output": "YES\n"}, {"input": "4\nccaa\n", "output": "YES\n"}, {"input": "15\nnrnuugrvroontur\n", "output": "YES\n"}, {"input": "10\nbryyyuupzu\n", "output": "YES\n"}, {"input": "9\nabcdffhih\n", "output": "YES\n"}, {"input": "1\nh\n", "output": "YES\n"}, {"input": "10\nihffeecbaa\n", "output": "YES\n"}, {"input": "6\nadbdab\n", "output": "YES\n"}, {"input": "3\nljk\n", "output": "NO\n"}, {"input": "6\nddecba\n", "output": "YES\n"}, {"input": "3\ncwg\n", "output": "NO\n"}, {"input": "27\nayyxwvutirqponmlkjshgfedcba\n", "output": "YES\n"}, {"input": "27\nmbpsweykjdvaxyirtgduzhnfrlo\n", "output": "YES\n"}, {"input": "5\nbaacd\n", "output": "YES\n"}, {"input": "7\nsrrssrk\n", "output": "YES\n"}, {"input": "5\nnvnfg\n", "output": "YES\n"}, {"input": "15\nrutnoorvrguunrn\n", "output": "YES\n"}, {"input": "10\nbryyyuuqzu\n", "output": "YES\n"}, {"input": "9\nabcdfghih\n", "output": "YES\n"}, {"input": "1\ni\n", "output": "YES\n"}, {"input": "10\nihffeebbaa\n", "output": "YES\n"}, {"input": "6\nadbdac\n", "output": "YES\n"}, {"input": "3\nkkj\n", "output": "YES\n"}, {"input": "6\nabcedd\n", "output": "YES\n"}, {"input": "3\nvch\n", "output": "NO\n"}, {"input": "27\nabcdefghsjklmnopqrituvwxyya\n", "output": "YES\n"}, {"input": "27\nmbpsweykadvjxyirtgduzhnfrlo\n", "output": "YES\n"}, {"input": "5\nbaace\n", "output": "YES\n"}, {"input": "7\nsrrrssk\n", "output": "YES\n"}, {"input": "5\novnfg\n", "output": "NO\n"}, {"input": "15\nrutnoorvrguunqn\n", "output": "YES\n"}, {"input": "10\nuzquuyyyrb\n", "output": "YES\n"}, {"input": "9\nfbcdaghih\n", "output": "YES\n"}, {"input": "1\nj\n", "output": "YES\n"}]}, "problem_space_curve_coefficient_list": [270.1595143138112, 164.72594815951007, 164.69870413164156, 154.487775895979, 154.477067854021, 150.8568618881119, 150.85143957604896, 150.84205638111888, 150.83850524475525, 150.83843695367133, 150.83679796765733, 150.8364155375874, 150.83485850087413, 150.82785183566435, 150.81831840034965, 102.62357954545455, 102.60533216783217, 102.60533216783217, 102.60533216783217, 102.60533216783217, 102.60462194055944, 102.60291466346153, 102.5960992132867, 51.67192963286713, 51.66979895104895, 51.66480004370629, 51.65450174825175, 51.65078671328671, 51.64675753933567, 51.64537805944056, 51.64427174388112, 51.64402589597902, 51.64216837849651, 51.63467001748252, 51.63296274038461, 51.6328125, 51.62758140297203, 50.11816776933946, 48.04975688374126, 48.04862325174825, 48.04724377185315, 48.03932200611888, 48.02753496503497, 48.02753496503497, 48.02753496503497, 48.02753496503497, 48.02596427010489, 48.02556818181818, 48.02249508304196, 48.01917613636363, 48.01794689685315, 48.01779665646853, 48.01626693618881, 48.01380845716783, 48.01230605332168, 48.01031195367133, 48.00779884178322, 48.00635107080419, 48.0, 48.0, 48.0, 48.0, 48.0, 48.0, 48.0, 48.0, 48.0, 48.0, 48.0, 48.0, 48.0, 48.0, 47.99928977272727, 47.99928977272727, 47.99905758304196, 47.99786931818182, 47.99786931818182, 47.99786931818182, 47.99786931818182, 47.99782834353147, 47.9978010270979, 47.9978010270979, 47.99717274912587, 47.99691324300699, 47.99685861013986, 47.99613472465035, 47.99613472465035, 47.99597082604895, 47.99594350961539, 47.99571131993007, 47.99560205419581, 47.99502840909091, 47.99434549825175, 47.99360795454545, 47.99348503059441, 47.99340308129371, 47.9925152972028, 47.99187336101399, 47.99082167832168, 47.99005681818182, 47.98976999562937, 47.98848612325175, 47.98832222465035, 47.98386964597902, 47.97465034965035, 6.0, 6.0, 6.0, 5.9992897727272725, 5.996448863636363, 2.8137292395104896, 2.7558866914335662, 0.43397057173032816, 0.39525279936918867, 0.3378524212277223, 0.3319493006993007, 0.32238854895104896, 0.3204763986013986, 0.3204763986013986, 0.3204763986013986, 0.3204763986013986, 0.3204763986013986, 0.3204763986013986, 0.3204763986013986, 0.3204763986013986, 0.3204763986013986, 0.3161740603146853, 0.31053321678321677, 0.30709134615384615, 0.30709134615384615, 0.30709134615384615, 0.30709134615384615, 0.30709134615384615, 0.30709134615384615, 0.30676366733911004, 0.30661330856643354, 0.30442690272210055, 0.29944274475524474, 0.29753059440559443, 0.291958041958042, 0.28496503496503495, 0.28496503496503495, 0.28496503496503495, 0.28496503496503495, 0.28496503496503495, 0.28496503496503495, 0.28496503496503495, 0.28496503496503495, 0.28496503496503495, 0.2727272727272727, 0.2727272727272727, 0.2727272727272727, 0.18138111888111888, 0.1791958041958042, 0.16899239975941685, 0.058787472409198564, 0.029010052447552448, 0.029010052447552448, 0.029010052447552448, 0.027534965034965036, 0.026059877622377624, 0.02556818181818182], "human_label": true, "framework_note": ""}}, "1028_B. Unnatural Conditions": {"O(1)": {"problem_name": "1028_B. Unnatural Conditions", "problem_id": "2433", "solution_id": "2433_155", "description": "Let s(x) be sum of digits in decimal representation of positive integer x. Given two integers n and m, find some positive integers a and b such that \n\n  * s(a) \u2265 n, \n  * s(b) \u2265 n, \n  * s(a + b) \u2264 m. \n\nInput\n\nThe only line of input contain two integers n and m (1 \u2264 n, m \u2264 1129).\n\nOutput\n\nPrint two lines, one for decimal representation of a and one for decimal representation of b. Both numbers must not contain leading zeros and must have length no more than 2230.\n\nExamples\n\nInput\n\n6 5\n\n\nOutput\n\n6 \n7\n\n\nInput\n\n8 16\n\n\nOutput\n\n35 \n53\n\nNote\n\nIn the first sample, we have n = 6 and m = 5. One valid solution is a = 6, b = 7. Indeed, we have s(a) = 6 \u2265 n and s(b) = 7 \u2265 n, and also s(a + b) = s(13) = 4 \u2264 m.", "solution_code": "\na=input()\n\nprint('4'*2228+'5')\nprint('5'*2229)\n", "dataclass_code": "import sys\nimport time\nimport itertools\nfrom itertools import accumulate, product, permutations, combinations\nimport collections\nfrom collections import Counter, OrderedDict, deque, defaultdict, ChainMap\nfrom functools import lru_cache\nimport math\nfrom math import sqrt, sin, cos, tan, ceil, fabs, floor, gcd, exp, log, log2\nimport fractions\nfrom typing import List, Tuple\nimport numpy as np\nimport random\nimport heapq\nfrom heapq import *\nfrom dataclasses import dataclass\n\nimport builtins\nimport re\n\ndef strip(s, characters = None):\n    if characters is None:\n        characters = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n    else:\n        characters = list(characters)\n\n    characters = [x for x in characters if len(x) > 0] \n\n    i = 0\n    while i < len(s):\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[i:i + len(sep_candidate)] == sep_candidate:\n                found_sep_candidate = True\n                i += len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    j = len(s) - 1\n    while j >= 0:\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[j + 1 - len(sep_candidate):j+1] == sep_candidate:\n                found_sep_candidate = True\n                j -= len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    return s[i:j+1]\n\ndef split(s, sep=None, maxsplit=-1):\n    if sep == '':\n        raise builtins.ValueError('empty separator')\n\n    if type(sep) == list and '' in sep:\n        raise builtins.ValueError('empty separator')\n\n    if sep is None:\n        sep = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n        result = []\n        word = ''\n        count_split = 0\n        \n        if maxsplit == -1:\n            maxsplit = len(s) * 1000\n\n        i = 0\n        while i < len(s):\n            found_sep_candidate = False\n\n            for sep_candidate in sep:\n                if s[i:i + len(sep_candidate)] == sep_candidate:\n                    found_sep_candidate = True\n\n                    if word:\n                        result.append(word)\n                        count_split += 1\n                        word = ''\n\n                    i += len(sep_candidate)\n                    break\n\n            if not found_sep_candidate and count_split < maxsplit:\n                word += s[i]\n                i += 1\n\n            elif not found_sep_candidate and count_split >= maxsplit:\n                word += s[i:]\n                i = len(s)\n\n        if word:\n            result.append(word)\n        return result\n    \n    if type(sep) == str:\n        sep = [sep]\n\n    if maxsplit == -1:\n        maxsplit = 0\n    elif maxsplit == 0:\n        maxsplit = -1\n\n    return re.split(re.compile(\"|\".join([re.escape(x) for x in sep])), s, maxsplit=maxsplit)\n\nclass str_escaped(str):\n    def split(self, sep=None, maxsplit=-1):\n        return split(self, sep=sep, maxsplit=maxsplit)\n    \n    def strip(self, chars=None):\n        return strip(self, characters = chars)\n\nfrom dataclasses import dataclass\n\n@dataclass\nclass Input:\n    rows: int\n    columns: int\n\n    @classmethod\n    def from_str(cls, input_: str):\n        rows, columns = input_.split('\\n')[0].split(' ')\n        rows = int(rows)\n        columns = int(columns)\n        return cls(rows, columns)\n\n    def __repr__(self):\n        return str(self.rows) + ' ' + str(self.columns) + '\\n'\n", "inputs_example": "8 16\n", "space_complexity_inferred": "O(1)", "space_curve_coefficient": 59.0, "tests": {"public_tests": [{"input": "8 16\n", "output": "11111111\n88888889"}, {"input": "6 5\n", "output": "111111\n888889"}], "private_tests": [{"input": "578 3\n", "outputn}, {"input": "20 2\n", "output": "11111111111111111111\n88888888888888888889"}, {"input": "1000 1\n", "output": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n}, {"input": "4 1\n", "output": "1111\n8889"}, {"input": "10 1\n", "output": "1111111111\n8888888889"}, {"input": "843 152\n", "outputn}, {"input": "1 1\n", "output": "1\n9"}, {"input": "3 10\n", "output": "111\n889"}, {"input": "1 1000\n", "output": "1\n9"}, {"input": "9 1\n", "output": "111111111\n888888889"}, {"input": "1000 1000\n", "outputn8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "123 5\n", "output": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "1 1129\n", "output": "1\n9"}, {"input": "999 999\n", "outputn}, {"input": "1129 1129\n", "outputn}, {"input": "1129 1\n", "outputn}, {"input": "321 1129\n", "output": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "123 1000\n", "output": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "100 10\n", "output": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "4 3\n", "output": "1111\n8889"}], "generated_tests": [{"input": "1099 3\n", "outputn8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "20 0\n", "output": "11111111111111111111\n88888888888888888889"}, {"input": "3 1\n", "output": "111\n889"}, {"input": "10 2\n", "output": "1111111111\n8888888889"}, {"input": "1445 152\n", "outputn88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "2 1\n", "output": "11\n89"}, {"input": "7 1\n", "output": "1111111\n8888889"}, {"input": "18 5\n", "output": "111111111111111111\n888888888888888889"}, {"input": "1 1128\n", "output": "1\n9"}, {"input": "999 1741\n", "outputn}, {"input": "1129 467\n", "outputn}, {"input": "321 414\n", "output": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "202 1000\n", "output": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "100 15\n", "output": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "4 2\n", "output": "1111\n8889"}, {"input": "8 20\n", "output": "11111111\n88888889"}, {"input": "6 7\n", "output": "111111\n888889"}, {"input": "19 2\n", "output": "1111111111111111111\n8888888888888888889"}, {"input": "33 1741\n", "output": "111111111111111111111111111111111\n888888888888888888888888888888889"}, {"input": "128 1000\n", "output": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "5 20\n", "output": "11111\n88889"}, {"input": "66 1741\n", "output": "111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "949 -1\n", "outputn}, {"input": "110 16\n", "output": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "1337 6\n", "outputn}, {"input": "12 4\n", "output": "111111111111\n888888888889"}, {"input": "35 3\n", "output": "11111111111111111111111111111111111\n88888888888888888888888888888888889"}, {"input": "1059 -1\n", "outputn}, {"input": "9 1100\n", "output": "111111111\n888888889"}, {"input": "2380 619\n", "outputn}, {"input": "40 3\n", "output": "1111111111111111111111111111111111111111\n8888888888888888888888888888888888888889"}, {"input": "75 1977\n", "output": "111111111111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "2166 2\n", "output": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n}, {"input": "3963 619\n", "outputn}, {"input": "23 3\n", "output": "11111111111111111111111\n88888888888888888888889"}, {"input": "21 1977\n", "output": "111111111111111111111\n888888888888888888889"}, {"input": "375 30\n", "output": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "17 0\n", "output": "11111111111111111\n88888888888888889"}, {"input": "13 89\n", "output": "1111111111111\n8888888888889"}, {"input": "3 9\n", "output": "111\n889"}, {"input": "1129 0\n", "output": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n}, {"input": "1099 5\n", "outputn}, {"input": "3 0\n", "output": "111\n889"}, {"input": "1445 249\n", "outputn88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "2 0\n", "output": "11\n89"}, {"input": "3 2\n", "output": "111\n889"}, {"input": "18 3\n", "output": "111111111111111111\n888888888888888889"}, {"input": "1 1354\n", "output": "1\n9"}, {"input": "1129 435\n", "outputn}, {"input": "1129 -1\n", "outputn}, {"input": "321 360\n", "output": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "100 16\n", "output": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "4 5\n", "output": "1111\n8889"}, {"input": "3 7\n", "output": "111\n889"}, {"input": "1099 6\n", "outputn}, {"input": "2 2\n", "output": "11\n89"}, {"input": "19 4\n", "output": "1111111111111111111\n8888888888888888889"}, {"input": "1445 374\n", "outputn88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "2 -1\n", "output": "11\n89"}, {"input": "18 4\n", "output": "111111111111111111\n888888888888888889"}, {"input": "1 2701\n", "output": "1\n9"}, {"input": "1129 55\n", "outputn}, {"input": "321 70\n", "output": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "128 1100\n", "output": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "7 5\n", "output": "1111111\n8888889"}, {"input": "5 21\n", "output": "11111\n88889"}, {"input": "2 7\n", "output": "11\n89"}, {"input": "1445 619\n", "outputn}, {"input": "4 -1\n", "output": "1111\n8889"}, {"input": "66 1977\n", "output": "111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "1129 78\n", "outputn}, {"input": "7 70\n", "output": "1111111\n8888889"}, {"input": "110 4\n", "output": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "2 5\n", "output": "11\n89"}, {"input": "5 1\n", "output": "11111\n88889"}, {"input": "4 7\n", "output": "1111\n8889"}, {"input": "1337 2\n", "outputn}, {"input": "5 4\n", "output": "11111\n88889"}, {"input": "6 -1\n", "output": "111111\n888889"}, {"input": "1129 30\n", "outputn}, {"input": "1059 0\n", "outputn}, {"input": "7 89\n", "output": "1111111\n8888889"}, {"input": "12 1100\n", "output": "111111111111\n888888888889"}, {"input": "110 7\n", "output": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "2 4\n", "output": "11\n89"}, {"input": "5 0\n", "output": "11111\n88889"}, {"input": "6 4\n", "output": "111111\n888889"}, {"input": "10 4\n", "output": "1111111111\n8888888889"}, {"input": "6 0\n", "output": "111111\n888889"}, {"input": "4 1100\n", "output": "1111\n8889"}, {"input": "110 1\n", "output": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "4 4\n", "output": "1111\n8889"}, {"input": "10 0\n", "output": "1111111111\n8888888889"}, {"input": "6 3\n", "output": "111111\n888889"}]}, "problem_space_curve_coefficient_list": [296.0, 162.0, 148.0, 111.0, 111.0, 111.0, 106.0, 105.0, 105.0, 105.0, 84.0, 83.0, 80.0, 80.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 53.0, 53.0, 53.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 30.5, 28.0, 28.0, 28.0, 16.0, 16.0], "human_label": true, "framework_note": ""}, "O(n)": {"problem_name": "1028_B. Unnatural Conditions", "problem_id": "2433", "solution_id": "2433_142", "description": "Let s(x) be sum of digits in decimal representation of positive integer x. Given two integers n and m, find some positive integers a and b such that \n\n  * s(a) \u2265 n, \n  * s(b) \u2265 n, \n  * s(a + b) \u2264 m. \n\nInput\n\nThe only line of input contain two integers n and m (1 \u2264 n, m \u2264 1129).\n\nOutput\n\nPrint two lines, one for decimal representation of a and one for decimal representation of b. Both numbers must not contain leading zeros and must have length no more than 2230.\n\nExamples\n\nInput\n\n6 5\n\n\nOutput\n\n6 \n7\n\n\nInput\n\n8 16\n\n\nOutput\n\n35 \n53\n\nNote\n\nIn the first sample, we have n = 6 and m = 5. One valid solution is a = 6, b = 7. Indeed, we have s(a) = 6 \u2265 n and s(b) = 7 \u2265 n, and also s(a + b) = s(13) = 4 \u2264 m.", "solution_code": "n, m = [int(x) for x in input().split()]\n\nprint('1' * n)\nprint('8' * (n-1) + '9')\n", "dataclass_code": "import sys\nimport time\nimport itertools\nfrom itertools import accumulate, product, permutations, combinations\nimport collections\nfrom collections import Counter, OrderedDict, deque, defaultdict, ChainMap\nfrom functools import lru_cache\nimport math\nfrom math import sqrt, sin, cos, tan, ceil, fabs, floor, gcd, exp, log, log2\nimport fractions\nfrom typing import List, Tuple\nimport numpy as np\nimport random\nimport heapq\nfrom heapq import *\nfrom dataclasses import dataclass\n\nimport builtins\nimport re\n\ndef strip(s, characters = None):\n    if characters is None:\n        characters = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n    else:\n        characters = list(characters)\n\n    characters = [x for x in characters if len(x) > 0] \n\n    i = 0\n    while i < len(s):\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[i:i + len(sep_candidate)] == sep_candidate:\n                found_sep_candidate = True\n                i += len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    j = len(s) - 1\n    while j >= 0:\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[j + 1 - len(sep_candidate):j+1] == sep_candidate:\n                found_sep_candidate = True\n                j -= len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    return s[i:j+1]\n\ndef split(s, sep=None, maxsplit=-1):\n    if sep == '':\n        raise builtins.ValueError('empty separator')\n\n    if type(sep) == list and '' in sep:\n        raise builtins.ValueError('empty separator')\n\n    if sep is None:\n        sep = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n        result = []\n        word = ''\n        count_split = 0\n        \n        if maxsplit == -1:\n            maxsplit = len(s) * 1000\n\n        i = 0\n        while i < len(s):\n            found_sep_candidate = False\n\n            for sep_candidate in sep:\n                if s[i:i + len(sep_candidate)] == sep_candidate:\n                    found_sep_candidate = True\n\n                    if word:\n                        result.append(word)\n                        count_split += 1\n                        word = ''\n\n                    i += len(sep_candidate)\n                    break\n\n            if not found_sep_candidate and count_split < maxsplit:\n                word += s[i]\n                i += 1\n\n            elif not found_sep_candidate and count_split >= maxsplit:\n                word += s[i:]\n                i = len(s)\n\n        if word:\n            result.append(word)\n        return result\n    \n    if type(sep) == str:\n        sep = [sep]\n\n    if maxsplit == -1:\n        maxsplit = 0\n    elif maxsplit == 0:\n        maxsplit = -1\n\n    return re.split(re.compile(\"|\".join([re.escape(x) for x in sep])), s, maxsplit=maxsplit)\n\nclass str_escaped(str):\n    def split(self, sep=None, maxsplit=-1):\n        return split(self, sep=sep, maxsplit=maxsplit)\n    \n    def strip(self, chars=None):\n        return strip(self, characters = chars)\n\nfrom dataclasses import dataclass\n\n@dataclass\nclass Input:\n    rows: int\n    columns: int\n\n    @classmethod\n    def from_str(cls, input_: str):\n        rows, columns = input_.split('\\n')[0].split(' ')\n        rows = int(rows)\n        columns = int(columns)\n        return cls(rows, columns)\n\n    def __repr__(self):\n        return str(self.rows) + ' ' + str(self.columns) + '\\n'\n", "inputs_example": "8 16\n", "space_complexity_inferred": "O(n)", "space_curve_coefficient": 15.995028409090908, "tests": {"public_tests": [{"input": "8 16\n", "output": "11111111\n88888889"}, {"input": "6 5\n", "output": "111111\n888889"}], "private_tests": [{"input": "578 3\n", "outputn}, {"input": "20 2\n", "output": "11111111111111111111\n88888888888888888889"}, {"input": "1000 1\n", "outputn}, {"input": "4 1\n", "output": "1111\n8889"}, {"input": "10 1\n", "output": "1111111111\n8888888889"}, {"input": "843 152\n", "outputn}, {"input": "1 1\n", "output": "1\n9"}, {"input": "3 10\n", "output": "111\n889"}, {"input": "1 1000\n", "output": "1\n9"}, {"input": "9 1\n", "output": "111111111\n888888889"}, {"input": "1000 1000\n", "outputn}, {"input": "123 5\n", "output": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "1 1129\n", "output": "1\n9"}, {"input": "999 999\n", "outputn}, {"input": "1129 1129\n", "outputn}, {"input": "1129 1\n", "output": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n}, {"input": "321 1129\n", "output": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "123 1000\n", "output": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "100 10\n", "output": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "4 3\n", "output": "1111\n8889"}], "generated_tests": [{"input": "1099 3\n", "outputn}, {"input": "20 0\n", "output": "11111111111111111111\n88888888888888888889"}, {"input": "3 1\n", "output": "111\n889"}, {"input": "10 2\n", "output": "1111111111\n8888888889"}, {"input": "1445 152\n", "outputn}, {"input": "2 1\n", "output": "11\n89"}, {"input": "7 1\n", "output": "1111111\n8888889"}, {"input": "18 5\n", "output": "111111111111111111\n888888888888888889"}, {"input": "1 1128\n", "output": "1\n9"}, {"input": "999 1741\n", "outputn}, {"input": "1129 467\n", "outputn}, {"input": "321 414\n", "output": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "202 1000\n", "output": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "100 15\n", "output": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "4 2\n", "output": "1111\n8889"}, {"input": "8 20\n", "output": "11111111\n88888889"}, {"input": "6 7\n", "output": "111111\n888889"}, {"input": "19 2\n", "output": "1111111111111111111\n8888888888888888889"}, {"input": "33 1741\n", "output": "111111111111111111111111111111111\n888888888888888888888888888888889"}, {"input": "128 1000\n", "output": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "5 20\n", "output": "11111\n88889"}, {"input": "66 1741\n", "output": "111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "949 -1\n", "outputn}, {"input": "110 16\n", "output": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "1337 6\n", "outputn}, {"input": "12 4\n", "output": "111111111111\n888888888889"}, {"input": "35 3\n", "output": "11111111111111111111111111111111111\n88888888888888888888888888888888889"}, {"input": "1059 -1\n", "output": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n}, {"input": "9 1100\n", "output": "111111111\n888888889"}, {"input": "2380 619\n", "outputn}, {"input": "40 3\n", "output": "1111111111111111111111111111111111111111\n8888888888888888888888888888888888888889"}, {"input": "75 1977\n", "output": "111111111111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "2166 2\n", "outputn}, {"input": "3963 619\n", "outputn}, {"input": "23 3\n", "output": "11111111111111111111111\n88888888888888888888889"}, {"input": "21 1977\n", "output": "111111111111111111111\n888888888888888888889"}, {"input": "375 30\n", "output": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "17 0\n", "output": "11111111111111111\n88888888888888889"}, {"input": "13 89\n", "output": "1111111111111\n8888888888889"}, {"input": "3 9\n", "output": "111\n889"}, {"input": "1129 0\n", "outputn}, {"input": "1099 5\n", "outputn}, {"input": "3 0\n", "output": "111\n889"}, {"input": "1445 249\n", "outputn}, {"input": "2 0\n", "output": "11\n89"}, {"input": "3 2\n", "output": "111\n889"}, {"input": "18 3\n", "output": "111111111111111111\n888888888888888889"}, {"input": "1 1354\n", "output": "1\n9"}, {"input": "1129 435\n", "outputn}, {"input": "1129 -1\n", "outputn}, {"input": "321 360\n", "output": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "100 16\n", "output": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "4 5\n", "output": "1111\n8889"}, {"input": "3 7\n", "output": "111\n889"}, {"input": "1099 6\n", "outputn8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "2 2\n", "output": "11\n89"}, {"input": "19 4\n", "output": "1111111111111111111\n8888888888888888889"}, {"input": "1445 374\n", "outputn}, {"input": "2 -1\n", "output": "11\n89"}, {"input": "18 4\n", "output": "111111111111111111\n888888888888888889"}, {"input": "1 2701\n", "output": "1\n9"}, {"input": "1129 55\n", "outputn8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "321 70\n", "output": "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "128 1100\n", "output": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "7 5\n", "output": "1111111\n8888889"}, {"input": "5 21\n", "output": "11111\n88889"}, {"input": "2 7\n", "output": "11\n89"}, {"input": "1445 619\n", "outputn}, {"input": "4 -1\n", "output": "1111\n8889"}, {"input": "66 1977\n", "output": "111111111111111111111111111111111111111111111111111111111111111111\n888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "1129 78\n", "outputn}, {"input": "7 70\n", "output": "1111111\n8888889"}, {"input": "110 4\n", "output": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "2 5\n", "output": "11\n89"}, {"input": "5 1\n", "output": "11111\n88889"}, {"input": "4 7\n", "output": "1111\n8889"}, {"input": "1337 2\n", "outputn}, {"input": "5 4\n", "output": "11111\n88889"}, {"input": "6 -1\n", "output": "111111\n888889"}, {"input": "1129 30\n", "outputn}, {"input": "1059 0\n", "outputn}, {"input": "7 89\n", "output": "1111111\n8888889"}, {"input": "12 1100\n", "output": "111111111111\n888888888889"}, {"input": "110 7\n", "output": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "2 4\n", "output": "11\n89"}, {"input": "5 0\n", "output": "11111\n88889"}, {"input": "6 4\n", "output": "111111\n888889"}, {"input": "10 4\n", "output": "1111111111\n8888888889"}, {"input": "6 0\n", "output": "111111\n888889"}, {"input": "4 1100\n", "output": "1111\n8889"}, {"input": "110 1\n", "output": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888889"}, {"input": "4 4\n", "output": "1111\n8889"}, {"input": "10 0\n", "output": "1111111111\n8888888889"}, {"input": "6 3\n", "output": "111111\n888889"}]}, "problem_space_curve_coefficient_list": [969.0303468877362, 934.2368881118881, 934.2368881118881, 934.2283517263986, 299.69053212412587, 299.6877731643357, 267.6761636800699, 265.90928212412587, 265.8769667832168, 191.9921875, 184.1161221590909, 136.96099213286712, 134.2368881118881, 134.20390351835664, 133.10609702797203, 111.0, 84.85270979020979, 67.68478201486013, 42.64288941520451, 37.77962239583333, 37.70633468094405, 34.33679915047671, 30.877771670470143, 30.720350860027224, 26.61820086391224, 26.323780033324795, 26.282408939563553, 26.269999913666332, 26.18012368736852, 24.0, 24.0, 23.997869318181817, 23.244980416646282, 23.229541078998185, 22.074833369755243, 20.876980441433567, 16.026551573426573, 16.017632757867133, 16.0, 16.0, 16.0, 16.0, 16.0, 16.0, 16.0, 15.999289772727273, 15.999289772727273, 15.997828343531468, 15.997787368881118, 15.996954217657343, 15.99685861013986, 15.995028409090908, 15.995028409090908, 15.994318181818182, 15.993607954545455, 15.993485030594405, 15.992815777972028, 15.9921875, 15.991408981643357, 15.989974868881118, 15.9881993006993, 15.987256883741258, 15.985372049825175, 15.985249125874127, 15.982667722902098, 15.979471700174825, 15.969009506118882, 9.782366071428571, 8.022017045454545, 8.0, 7.782366071428571, 7.782366071428571, 7.779854910714286, 7.7038690476190474, 7.5554315476190474, 6.283851169927119, 6.221969696969697, 6.144903273809524, 6.000437062937063, 5.984019886363637, 5.938058035714286, 5.32659527972028, 5.293187281468532, 4.658017113095238, 4.644438244047619, 4.542231206293707, 4.0381610576923075, 4.026797421328672, 3.9978693181818183, 3.9949328015734267, 3.9911494755244754, 3.9898246284965033, 3.981288243006993, 3.8433539117132867, 3.5516826923076925, 3.3862407124125875, 3.381993006993007, 2.8887947989510487, 2.678676791958042, 2.2495902534965033, 2.2038607505973853, 1.8772399475524475, 1.704417670682731, 0.026551573426573428, 0.026059877622377624, 0.022727272727272728], "human_label": true, "framework_note": ""}}, "1056_A. Determine Line": {"O(n)": {"problem_name": "1056_A. Determine Line", "problem_id": "1010", "solution_id": "1010_221", "description": "Arkady's morning seemed to be straight of his nightmare. He overslept through the whole morning and, still half-asleep, got into the tram that arrived the first. Some time after, leaving the tram, he realized that he was not sure about the line number of the tram he was in.\n\nDuring his ride, Arkady woke up several times and each time he saw the tram stopping at some stop. For each stop he knows which lines of tram stop there. Given this information, can you help Arkady determine what are the possible lines of the tram he was in?\n\nInput\n\nThe first line contains a single integer n (2 \u2264 n \u2264 100) \u2014 the number of stops Arkady saw.\n\nThe next n lines describe the stops. Each of them starts with a single integer r (1 \u2264 r \u2264 100) \u2014 the number of tram lines that stop there. r distinct integers follow, each one between 1 and 100, inclusive, \u2014 the line numbers. They can be in arbitrary order.\n\nIt is guaranteed that Arkady's information is consistent, i.e. there is at least one tram line that Arkady could take.\n\nOutput\n\nPrint all tram lines that Arkady could be in, in arbitrary order.\n\nExamples\n\nInput\n\n\n3\n3 1 4 6\n2 1 4\n5 10 5 6 4 1\n\n\nOutput\n\n\n1 4 \n\n\nInput\n\n\n5\n1 1\n10 10 9 8 7 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 2 5\n4 10 1 5 3\n\n\nOutput\n\n\n1 \n\nNote\n\nConsider the first example. Arkady woke up three times. The first time he saw a stop with lines 1, 4, 6. The second time he saw a stop with lines 1, 4. The third time he saw a stop with lines 10, 5, 6, 4 and 1. He can be in a tram of one of two lines: 1 or 4.", "solution_code": "# -*- coding: utf-8 -*-\n\nN = int(input())\nfor i in range(N):\n    lines = list(map(str, input().split()))\n    lines = lines[1:]\n    if i == 0:\n        res = set(lines)\n    else:\n        res &= set(lines)\nprint(' '.join(res))\n", "dataclass_code": "import sys\nimport time\nimport itertools\nfrom itertools import accumulate, product, permutations, combinations\nimport collections\nfrom collections import Counter, OrderedDict, deque, defaultdict, ChainMap\nfrom functools import lru_cache\nimport math\nfrom math import sqrt, sin, cos, tan, ceil, fabs, floor, gcd, exp, log, log2\nimport fractions\nfrom typing import List, Tuple\nimport numpy as np\nimport random\nimport heapq\nfrom heapq import *\nfrom dataclasses import dataclass\n\nimport builtins\nimport re\n\ndef strip(s, characters = None):\n    if characters is None:\n        characters = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n    else:\n        characters = list(characters)\n\n    characters = [x for x in characters if len(x) > 0] \n\n    i = 0\n    while i < len(s):\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[i:i + len(sep_candidate)] == sep_candidate:\n                found_sep_candidate = True\n                i += len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    j = len(s) - 1\n    while j >= 0:\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[j + 1 - len(sep_candidate):j+1] == sep_candidate:\n                found_sep_candidate = True\n                j -= len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    return s[i:j+1]\n\ndef split(s, sep=None, maxsplit=-1):\n    if sep == '':\n        raise builtins.ValueError('empty separator')\n\n    if type(sep) == list and '' in sep:\n        raise builtins.ValueError('empty separator')\n\n    if sep is None:\n        sep = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n        result = []\n        word = ''\n        count_split = 0\n        \n        if maxsplit == -1:\n            maxsplit = len(s) * 1000\n\n        i = 0\n        while i < len(s):\n            found_sep_candidate = False\n\n            for sep_candidate in sep:\n                if s[i:i + len(sep_candidate)] == sep_candidate:\n                    found_sep_candidate = True\n\n                    if word:\n                        result.append(word)\n                        count_split += 1\n                        word = ''\n\n                    i += len(sep_candidate)\n                    break\n\n            if not found_sep_candidate and count_split < maxsplit:\n                word += s[i]\n                i += 1\n\n            elif not found_sep_candidate and count_split >= maxsplit:\n                word += s[i:]\n                i = len(s)\n\n        if word:\n            result.append(word)\n        return result\n    \n    if type(sep) == str:\n        sep = [sep]\n\n    if maxsplit == -1:\n        maxsplit = 0\n    elif maxsplit == 0:\n        maxsplit = -1\n\n    return re.split(re.compile(\"|\".join([re.escape(x) for x in sep])), s, maxsplit=maxsplit)\n\nclass str_escaped(str):\n    def split(self, sep=None, maxsplit=-1):\n        return split(self, sep=sep, maxsplit=maxsplit)\n    \n    def strip(self, chars=None):\n        return strip(self, characters = chars)\n\nfrom dataclasses import dataclass\nfrom typing import List\n\n@dataclass\nclass Input:\n    n: int\n    lists: List[List[int]]\n\n    @classmethod\n    def from_str(cls, input_: str):\n        lines = input_.strip().split('\\n')\n        n = int(lines[0])\n        lists = [list(map(int, line.split())) for line in lines[1:]]\n        assert len(lists) == n\n        return cls(n, lists)\n\n    def __repr__(self):\n        return str(self.n) + '\\n' + '\\n'.join([' '.join(map(str, lst)) for lst in self.lists]) + '\\n'\n", "inputs_example": "3\n3 1 4 6\n2 1 4\n5 10 5 6 4 1\n", "space_complexity_inferred": "O(n)", "space_curve_coefficient": 524.0340909090909, "tests": {"public_tests": [{"input": "3\n3 1 4 6\n2 1 4\n5 10 5 6 4 1\n", "output": "1 4 \n"}, {"input": "5\n1 1\n10 10 9 8 7 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 2 5\n4 10 1 5 3\n", "output": "1 \n"}], "private_tests": [{"input": "2\n1 2\n1 2\n", "output": "2 \n"}, {"input": "6\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n", "output": "1 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 16 44 99 92 29 2 4 26 19 61 21 81 23 10 33 76 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "29 \n"}, {"input": "2\n64 23 81 66 95 91 56 12 48 24 78 36 67 57 75 88 82 98 83 46 100 58 62 80 8 4 28 74 70 50 42 11 68 18 19 6 94 59 13 72 37 31 90 41 60 34 86 55 76 69 32 21 73 84 3 52 92 79 61 63 38 87 17 14 29\n65 89 14 93 58 60 80 64 28 91 70 48 19 55 75 21 100 98 88 69 7 42 41 81 8 76 54 87 16 56 53 29 71 9 37 62 61 73 95 50 13 32 24 1 20 92 11 23 46 38 65 72 96 66 6 78 74 17 83 59 40 45 67 57 86 34\n", "output": "6 8 11 13 14 17 19 21 23 24 28 29 32 34 37 38 41 42 46 48 50 55 56 57 58 59 60 61 62 66 67 69 70 72 73 74 75 76 78 80 81 83 86 87 88 91 92 95 98 100 \n"}, {"input": "3\n2 1 3\n2 3 5\n2 3 1\n", "output": "3 \n"}, {"input": "2\n3 1 2 3\n1 1\n", "output": "1 \n"}, {"input": "2\n3 1 2 3\n1 3\n", "output": "3 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 60 96 \n"}, {"input": "2\n1 100\n2 2 100\n", "output": "100 \n"}], "generated_tests": [{"input": "2\n64 23 81 66 95 91 56 12 48 24 78 36 67 57 75 88 82 98 83 46 100 58 62 80 8 4 28 74 70 50 42 11 68 18 19 6 94 59 13 72 37 31 90 41 60 34 86 55 76 69 32 21 73 84 3 52 92 79 61 63 38 87 17 14 29\n65 89 14 93 58 60 80 64 28 91 70 48 19 55 75 21 100 98 88 69 7 44 41 81 8 76 54 87 16 56 53 29 71 9 37 62 61 73 95 50 13 32 24 1 20 92 11 23 46 38 65 72 96 66 6 78 74 17 83 59 40 45 67 57 86 34\n", "output": "6 8 11 13 14 17 19 21 23 24 28 29 32 34 37 38 41 46 48 50 55 56 57 58 59 60 61 62 66 67 69 70 72 73 74 75 76 78 80 81 83 86 87 88 91 92 95 98 100 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "3\n3 1 4 6\n2 2 4\n5 10 5 6 4 1\n", "output": "4 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 76 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "29 \n"}, {"input": "10\n6 73 60 96 87 4 10\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 60 96 \n"}, {"input": "5\n1 1\n10 10 9 8 13 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 2 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "29 90 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 40 77 42 95 21 6 75 96 24\n", "output": "21 29 90 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 31 73 66 77 42 95 21 6 75 96 24\n", "output": "21 90 \n"}, {"input": "2\n35 35 15 89 13 51 72 54 41 58 97 18 93 86 16 44 99 92 29 2 4 26 19 61 21 81 23 10 33 76 83 46 39 32 17 14\n20 90 64 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "13 29 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 73 13 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 3 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 33 77 42 95 21 6 75 96 24\n", "output": "21 29 33 90 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 3 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 35 73 33 77 42 95 21 6 75 96 24\n", "output": "21 33 35 90 \n"}, {"input": "2\n35 35 15 42 13 51 72 54 41 58 97 18 93 86 16 44 99 92 29 2 4 26 19 61 21 81 23 10 33 76 83 46 39 32 17 14\n20 90 64 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "13 29 42 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 16 44 99 92 29 2 4 26 19 61 21 81 23 10 33 76 83 46 39 32 17 14\n20 90 64 28 52 56 84 9 30 25 29 73 11 77 42 95 13 6 33 96 24\n", "output": "29 33 \n"}, {"input": "2\n35 35 15 89 27 57 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 11 46 39 32 17 14\n20 90 55 28 52 17 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "17 29 90 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 56 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 2 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 56 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 56 87 19 60\n6 4 73 87 96 19 60\n6 19 87 44 73 4 96\n", "output": "4 96 \n"}, {"input": "5\n1 1\n10 10 9 8 16 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 2 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "5\n1 1\n10 10 13 8 16 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 2 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 66 77 42 95 21 6 75 96 24\n", "output": "21 29 90 \n"}, {"input": "5\n1 1\n10 10 13 8 16 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 2 5\n4 18 1 5 3\n", "output": "1 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 16 44 99 92 29 2 4 26 19 61 21 81 23 10 33 76 83 46 39 32 17 14\n20 90 64 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "29 \n"}, {"input": "3\n3 1 8 6\n2 1 4\n5 10 5 6 4 1\n", "output": "1 \n"}, {"input": "5\n1 1\n10 10 9 8 7 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 4 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 13 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "3\n3 1 4 6\n2 2 4\n5 13 5 6 4 1\n", "output": "4 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 2 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 27 73 87 96\n6 60 96 73 87 19 4\n6 96 4 56 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 60 96 87 4 10\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 32 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 60 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 56 61 19 60\n6 4 73 87 96 19 60\n6 19 87 44 73 4 96\n", "output": "4 96 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 3 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 40 77 42 95 21 6 75 96 24\n", "output": "21 29 90 \n"}, {"input": "3\n3 1 8 6\n2 1 4\n5 17 5 6 4 1\n", "output": "1 \n"}, {"input": "5\n1 1\n10 10 9 8 7 100 9 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 4 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 10\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 38\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 32 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 60 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 3 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 56 61 19 60\n6 4 73 87 96 19 60\n6 19 87 44 73 4 96\n", "output": "96 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 83 46 39 32 11 14\n20 90 55 28 52 56 84 9 30 25 31 73 66 77 42 95 21 6 75 96 24\n", "output": "21 90 \n"}, {"input": "3\n3 1 8 5\n2 1 4\n5 17 5 6 4 1\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 73 13 19 60\n6 4 19 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "10\n6 73 57 96 87 4 10\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 38\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 32 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "3\n3 1 11 5\n2 1 4\n5 17 5 6 4 1\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 52 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 73 13 19 60\n6 4 19 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "10\n6 73 42 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 52 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 73 13 19 60\n6 4 19 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 16 44 99 92 29 2 4 26 19 61 38 81 23 10 33 76 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "29 \n"}, {"input": "10\n6 73 60 96 87 4 24\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 60 96 \n"}, {"input": "5\n1 1\n10 10 9 8 7 100 5 4 3 99 1\n5 1 2 3 4 2\n5 4 1 3 2 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 15 4\n6 96 4 73 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 99 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 56 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 2 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 35 4 56 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 \n"}, {"input": "5\n1 1\n10 10 9 8 13 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 2 9\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 7 73 87 19 4\n6 96 4 56 87 19 60\n6 4 73 87 96 19 60\n6 19 87 44 73 4 96\n", "output": "4 \n"}, {"input": "2\n35 35 15 89 27 57 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "29 90 \n"}, {"input": "5\n1 1\n10 10 9 8 16 100 5 4 3 99 1\n4 1 2 3 4 5\n5 4 1 3 2 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "5\n1 1\n10 10 13 8 16 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 4 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 68 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 66 77 42 95 21 6 75 96 24\n", "output": "21 29 90 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 16 44 99 92 29 2 4 26 19 61 21 81 23 10 33 76 83 46 39 32 17 14\n20 90 64 28 52 56 84 9 30 25 29 73 11 77 42 95 13 6 75 96 24\n", "output": "29 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 45 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 13 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 60 96 87 4 10\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 10 19 60\n6 4 73 32 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 60 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 58 4 56 61 19 60\n6 4 73 87 96 19 60\n6 19 87 44 73 4 96\n", "output": "4 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 85 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 31 73 66 77 42 95 21 6 75 96 24\n", "output": "21 90 \n"}, {"input": "5\n1 1\n10 10 5 8 7 100 9 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 4 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 62 13 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "10\n6 73 60 96 87 4 10\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 38\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 12 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 32 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 3 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 56 61 19 60\n6 4 73 87 96 19 60\n6 19 87 44 92 4 96\n", "output": "96 \n"}, {"input": "3\n3 1 8 5\n2 1 4\n5 17 5 11 4 1\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 73 13 19 71\n6 4 19 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "10\n6 73 57 96 87 4 10\n7 87 73 25 19 96 4 60\n7 19 21 87 4 25 96 38\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 32 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 52 87 6 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 73 13 19 60\n6 4 19 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "10\n6 73 42 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 52 87 4 25 96 73\n6 4 87 60 19 30 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 73 13 19 60\n6 4 19 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 16 44 99 92 29 2 4 43 19 61 38 81 23 10 33 76 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "29 \n"}, {"input": "10\n6 73 60 96 87 4 24\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 77 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 60 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 15 4\n6 96 4 73 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 84 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 2 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 35 4 56 87 19 60\n6 4 73 87 96 19 60\n6 6 87 60 73 4 96\n", "output": "4 \n"}, {"input": "5\n1 1\n10 10 9 8 13 100 5 4 3 99 1\n5 1 2 3 4 8\n5 4 1 3 2 9\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 7 73 87 19 4\n6 96 4 45 87 19 60\n6 4 73 87 96 19 60\n6 19 87 44 73 4 96\n", "output": "4 \n"}, {"input": "2\n35 35 15 89 27 57 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 11 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "29 90 \n"}, {"input": "5\n1 1\n10 10 9 8 16 100 5 4 3 99 1\n4 1 2 2 4 5\n5 4 1 3 2 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "5\n1 1\n10 10 13 16 16 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 4 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 10\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 65\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 10 19 60\n6 4 73 32 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 60 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 1 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 62 13 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "3\n3 1 8 5\n2 1 4\n5 17 8 11 4 1\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 73 13 19 71\n6 4 23 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "10\n6 73 57 96 87 4 10\n7 87 73 25 18 96 4 60\n7 19 21 87 4 25 96 38\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 32 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 42 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 52 87 4 25 96 73\n6 4 87 60 19 30 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 38 5\n6 96 4 73 13 19 60\n6 4 19 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "10\n6 73 60 96 87 4 24\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 77 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 87 96 27 60\n6 19 87 60 73 4 96\n", "output": "4 60 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 42 87 96\n6 60 96 73 87 15 4\n6 96 4 73 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 84 4 96\n", "output": "4 96 \n"}, {"input": "5\n1 1\n10 10 9 8 13 100 5 4 3 99 1\n5 1 2 3 4 8\n5 4 1 5 2 9\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "5\n1 1\n10 10 13 16 16 100 6 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 4 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 100 16 44 99 92 29 2 4 26 19 61 21 81 23 10 33 76 83 46 39 32 17 14\n20 90 64 28 52 56 84 9 30 25 29 73 11 77 42 95 13 6 33 96 24\n", "output": "29 33 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 1 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 62 8 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "3\n3 1 11 5\n2 1 4\n5 17 8 11 4 1\n", "output": "1 \n"}]}, "problem_space_curve_coefficient_list": [1113.0208287805945, 1016.9464597902098, 768.0340909090909, 714.0152972027972, 684.8566433566433, 683.9965034965035, 683.9875983391609, 682.0116094842657, 682.0112680288462, 680.0575830419581, 603.9845798732517, 572.478583916084, 570.0152972027972, 570.0130845716783, 570.0101343968531, 570.0087822333916, 541.3545946241259, 538.0487325174826, 538.0392263986014, 538.0382976398602, 538.0317690122378, 538.0152972027972, 538.0152972027972, 538.0152972027972, 538.0152972027972, 538.0152972027972, 538.0152972027972, 538.0152972027972, 538.0152972027972, 538.0145869755245, 538.0137811407343, 538.013166520979, 538.0130845716783, 538.0116777753497, 538.0108719405595, 538.0095334353147, 538.0095334353147, 538.0089051573426, 538.0085910183567, 538.0074847027972, 538.0074847027972, 538.007184222028, 538.0064330201049, 536.9187472683567, 536.0600005463286, 536.0416848776224, 536.0340909090909, 536.0340909090909, 536.0340909090909, 536.0340909090909, 536.0340909090909, 536.0333670236014, 536.0304031905595, 536.0274530157343, 536.0274530157343, 536.02696131993, 536.0251720935315, 530.3970170454545, 529.2827114291958, 529.277412041084, 529.2746121066433, 529.2746121066433, 529.2537013767483, 529.2537013767483, 529.2537013767483, 529.2537013767483, 529.2537013767483, 529.2537013767483, 529.2537013767483, 529.2485385708042, 529.2478693181819, 529.2458888767483, 529.2436625874126, 529.2407943618881, 529.2400568181819, 529.2381993006993, 527.1963368662588, 526.0152972027972, 524.0340909090909, 522.0528846153846, 475.4777917395105, 466.1390816215035, 465.997227381993, 465.997227381993, 440.72928048513984, 440.7282424606643, 418.28836593094405, 418.28713669143355, 412.1662751311189, 409.89719460227275, 392.08645651223776, 392.0606424825175, 392.05965909090907, 392.05661330856645, 392.05547967657344, 392.03409090909093, 392.03409090909093, 392.03409090909093, 392.03409090909093, 392.03409090909093, 392.03409090909093, 392.03409090909093, 392.03409090909093, 392.03196022727275, 392.0291193181818, 392.0291193181818, 392.02819055944053, 392.02627840909093, 392.02554086538464, 392.0239018793706, 391.18511377338564, 329.6931135270979, 278.0521743881119, 278.0464925699301, 179.52119755244755, 179.52119755244755, 179.52119755244755, 179.52119755244755, 179.52119755244755, 179.52119755244755, 179.52119755244755, 179.52046000874125, 179.4798951048951, 178.4425262237762, 174.7440450174825, 154.46243990384616, 127.92679195804196, 127.90466564685315, 127.8854895104895, 81.64562390734265, 0.26163625416821046, 0.20778245192307693, 0.1764231861888112, 0.1764231861888112, 0.17638221153846154, 0.14953015734265734, 0.14953015734265734, 0.14375273164335664, 0.1433156687062937, 0.14167668269230768, 0.13684167395104896, 0.1356534090909091, 0.13516171328671328, 0.12307419143356643, 0.12237762237762238, 0.12237762237762238, 0.10861013986013986, 0.10861013986013986, 0.0917149256993007, 0.0917149256993007, 0.0917149256993007, 0.09101835664335664, 0.09090909090909091, 0.08597847465034965, 0.07832987325174826, 0.07189685314685315, 0.040537587412587416], "human_label": true, "framework_note": ""}, "O(n*m)": {"problem_name": "1056_A. Determine Line", "problem_id": "1010", "solution_id": "1010_196", "description": "Arkady's morning seemed to be straight of his nightmare. He overslept through the whole morning and, still half-asleep, got into the tram that arrived the first. Some time after, leaving the tram, he realized that he was not sure about the line number of the tram he was in.\n\nDuring his ride, Arkady woke up several times and each time he saw the tram stopping at some stop. For each stop he knows which lines of tram stop there. Given this information, can you help Arkady determine what are the possible lines of the tram he was in?\n\nInput\n\nThe first line contains a single integer n (2 \u2264 n \u2264 100) \u2014 the number of stops Arkady saw.\n\nThe next n lines describe the stops. Each of them starts with a single integer r (1 \u2264 r \u2264 100) \u2014 the number of tram lines that stop there. r distinct integers follow, each one between 1 and 100, inclusive, \u2014 the line numbers. They can be in arbitrary order.\n\nIt is guaranteed that Arkady's information is consistent, i.e. there is at least one tram line that Arkady could take.\n\nOutput\n\nPrint all tram lines that Arkady could be in, in arbitrary order.\n\nExamples\n\nInput\n\n\n3\n3 1 4 6\n2 1 4\n5 10 5 6 4 1\n\n\nOutput\n\n\n1 4 \n\n\nInput\n\n\n5\n1 1\n10 10 9 8 7 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 2 5\n4 10 1 5 3\n\n\nOutput\n\n\n1 \n\nNote\n\nConsider the first example. Arkady woke up three times. The first time he saw a stop with lines 1, 4, 6. The second time he saw a stop with lines 1, 4. The third time he saw a stop with lines 10, 5, 6, 4 and 1. He can be in a tram of one of two lines: 1 or 4.", "solution_code": "import math\ndef main():\n\t\n\tn = int(input())\n\n\ttab = []\n\n\tfor x in range(n):\n\t\ti = list(map(int,input().split()))\n\t\ti.pop(0)\n\t\ttab.append(i)\n\n\tfor x in range(1,101):\n\t\tinc = 0\n\t\tfor y in range(n):\n\t\t\tif x in tab[y]:\n\t\t\t\tinc += 1\n\t\tif inc == n:\n\t\t\tprint(x,end = \" \")\n\tprint()\n\n\nmain()\n    \n        ", "dataclass_code": "import sys\nimport time\nimport itertools\nfrom itertools import accumulate, product, permutations, combinations\nimport collections\nfrom collections import Counter, OrderedDict, deque, defaultdict, ChainMap\nfrom functools import lru_cache\nimport math\nfrom math import sqrt, sin, cos, tan, ceil, fabs, floor, gcd, exp, log, log2\nimport fractions\nfrom typing import List, Tuple\nimport numpy as np\nimport random\nimport heapq\nfrom heapq import *\nfrom dataclasses import dataclass\n\nimport builtins\nimport re\n\ndef strip(s, characters = None):\n    if characters is None:\n        characters = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n    else:\n        characters = list(characters)\n\n    characters = [x for x in characters if len(x) > 0] \n\n    i = 0\n    while i < len(s):\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[i:i + len(sep_candidate)] == sep_candidate:\n                found_sep_candidate = True\n                i += len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    j = len(s) - 1\n    while j >= 0:\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[j + 1 - len(sep_candidate):j+1] == sep_candidate:\n                found_sep_candidate = True\n                j -= len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    return s[i:j+1]\n\ndef split(s, sep=None, maxsplit=-1):\n    if sep == '':\n        raise builtins.ValueError('empty separator')\n\n    if type(sep) == list and '' in sep:\n        raise builtins.ValueError('empty separator')\n\n    if sep is None:\n        sep = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n        result = []\n        word = ''\n        count_split = 0\n        \n        if maxsplit == -1:\n            maxsplit = len(s) * 1000\n\n        i = 0\n        while i < len(s):\n            found_sep_candidate = False\n\n            for sep_candidate in sep:\n                if s[i:i + len(sep_candidate)] == sep_candidate:\n                    found_sep_candidate = True\n\n                    if word:\n                        result.append(word)\n                        count_split += 1\n                        word = ''\n\n                    i += len(sep_candidate)\n                    break\n\n            if not found_sep_candidate and count_split < maxsplit:\n                word += s[i]\n                i += 1\n\n            elif not found_sep_candidate and count_split >= maxsplit:\n                word += s[i:]\n                i = len(s)\n\n        if word:\n            result.append(word)\n        return result\n    \n    if type(sep) == str:\n        sep = [sep]\n\n    if maxsplit == -1:\n        maxsplit = 0\n    elif maxsplit == 0:\n        maxsplit = -1\n\n    return re.split(re.compile(\"|\".join([re.escape(x) for x in sep])), s, maxsplit=maxsplit)\n\nclass str_escaped(str):\n    def split(self, sep=None, maxsplit=-1):\n        return split(self, sep=sep, maxsplit=maxsplit)\n    \n    def strip(self, chars=None):\n        return strip(self, characters = chars)\n\nfrom dataclasses import dataclass\nfrom typing import List\n\n@dataclass\nclass Input:\n    n: int\n    lists: List[List[int]]\n\n    @classmethod\n    def from_str(cls, input_: str):\n        lines = input_.strip().split('\\n')\n        n = int(lines[0])\n        lists = [list(map(int, line.split())) for line in lines[1:]]\n        assert len(lists) == n\n        return cls(n, lists)\n\n    def __repr__(self):\n        return str(self.n) + '\\n' + '\\n'.join([' '.join(map(str, lst)) for lst in self.lists]) + '\\n'\n", "inputs_example": "3\n3 1 4 6\n2 1 4\n5 10 5 6 4 1\n", "space_complexity_inferred": "O(n*m)", "space_curve_coefficient": 683.9913133741259, "tests": {"public_tests": [{"input": "3\n3 1 4 6\n2 1 4\n5 10 5 6 4 1\n", "output": "1 4 \n"}, {"input": "5\n1 1\n10 10 9 8 7 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 2 5\n4 10 1 5 3\n", "output": "1 \n"}], "private_tests": [{"input": "2\n1 2\n1 2\n", "output": "2 \n"}, {"input": "6\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n", "output": "1 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 16 44 99 92 29 2 4 26 19 61 21 81 23 10 33 76 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "29 \n"}, {"input": "2\n64 23 81 66 95 91 56 12 48 24 78 36 67 57 75 88 82 98 83 46 100 58 62 80 8 4 28 74 70 50 42 11 68 18 19 6 94 59 13 72 37 31 90 41 60 34 86 55 76 69 32 21 73 84 3 52 92 79 61 63 38 87 17 14 29\n65 89 14 93 58 60 80 64 28 91 70 48 19 55 75 21 100 98 88 69 7 42 41 81 8 76 54 87 16 56 53 29 71 9 37 62 61 73 95 50 13 32 24 1 20 92 11 23 46 38 65 72 96 66 6 78 74 17 83 59 40 45 67 57 86 34\n", "output": "6 8 11 13 14 17 19 21 23 24 28 29 32 34 37 38 41 42 46 48 50 55 56 57 58 59 60 61 62 66 67 69 70 72 73 74 75 76 78 80 81 83 86 87 88 91 92 95 98 100 \n"}, {"input": "3\n2 1 3\n2 3 5\n2 3 1\n", "output": "3 \n"}, {"input": "2\n3 1 2 3\n1 1\n", "output": "1 \n"}, {"input": "2\n3 1 2 3\n1 3\n", "output": "3 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 60 96 \n"}, {"input": "2\n1 100\n2 2 100\n", "output": "100 \n"}], "generated_tests": [{"input": "2\n64 23 81 66 95 91 56 12 48 24 78 36 67 57 75 88 82 98 83 46 100 58 62 80 8 4 28 74 70 50 42 11 68 18 19 6 94 59 13 72 37 31 90 41 60 34 86 55 76 69 32 21 73 84 3 52 92 79 61 63 38 87 17 14 29\n65 89 14 93 58 60 80 64 28 91 70 48 19 55 75 21 100 98 88 69 7 44 41 81 8 76 54 87 16 56 53 29 71 9 37 62 61 73 95 50 13 32 24 1 20 92 11 23 46 38 65 72 96 66 6 78 74 17 83 59 40 45 67 57 86 34\n", "output": "6 8 11 13 14 17 19 21 23 24 28 29 32 34 37 38 41 46 48 50 55 56 57 58 59 60 61 62 66 67 69 70 72 73 74 75 76 78 80 81 83 86 87 88 91 92 95 98 100 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "3\n3 1 4 6\n2 2 4\n5 10 5 6 4 1\n", "output": "4 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 76 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "29 \n"}, {"input": "10\n6 73 60 96 87 4 10\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 60 96 \n"}, {"input": "5\n1 1\n10 10 9 8 13 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 2 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "29 90 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 40 77 42 95 21 6 75 96 24\n", "output": "21 29 90 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 31 73 66 77 42 95 21 6 75 96 24\n", "output": "21 90 \n"}, {"input": "2\n35 35 15 89 13 51 72 54 41 58 97 18 93 86 16 44 99 92 29 2 4 26 19 61 21 81 23 10 33 76 83 46 39 32 17 14\n20 90 64 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "13 29 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 73 13 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 3 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 33 77 42 95 21 6 75 96 24\n", "output": "21 29 33 90 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 3 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 35 73 33 77 42 95 21 6 75 96 24\n", "output": "21 33 35 90 \n"}, {"input": "2\n35 35 15 42 13 51 72 54 41 58 97 18 93 86 16 44 99 92 29 2 4 26 19 61 21 81 23 10 33 76 83 46 39 32 17 14\n20 90 64 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "13 29 42 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 16 44 99 92 29 2 4 26 19 61 21 81 23 10 33 76 83 46 39 32 17 14\n20 90 64 28 52 56 84 9 30 25 29 73 11 77 42 95 13 6 33 96 24\n", "output": "29 33 \n"}, {"input": "2\n35 35 15 89 27 57 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 11 46 39 32 17 14\n20 90 55 28 52 17 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "17 29 90 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 56 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 2 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 56 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 56 87 19 60\n6 4 73 87 96 19 60\n6 19 87 44 73 4 96\n", "output": "4 96 \n"}, {"input": "5\n1 1\n10 10 9 8 16 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 2 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "5\n1 1\n10 10 13 8 16 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 2 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 66 77 42 95 21 6 75 96 24\n", "output": "21 29 90 \n"}, {"input": "5\n1 1\n10 10 13 8 16 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 2 5\n4 18 1 5 3\n", "output": "1 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 16 44 99 92 29 2 4 26 19 61 21 81 23 10 33 76 83 46 39 32 17 14\n20 90 64 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "29 \n"}, {"input": "3\n3 1 8 6\n2 1 4\n5 10 5 6 4 1\n", "output": "1 \n"}, {"input": "5\n1 1\n10 10 9 8 7 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 4 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 13 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "3\n3 1 4 6\n2 2 4\n5 13 5 6 4 1\n", "output": "4 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 2 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 27 73 87 96\n6 60 96 73 87 19 4\n6 96 4 56 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 60 96 87 4 10\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 32 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 60 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 56 61 19 60\n6 4 73 87 96 19 60\n6 19 87 44 73 4 96\n", "output": "4 96 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 3 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 40 77 42 95 21 6 75 96 24\n", "output": "21 29 90 \n"}, {"input": "3\n3 1 8 6\n2 1 4\n5 17 5 6 4 1\n", "output": "1 \n"}, {"input": "5\n1 1\n10 10 9 8 7 100 9 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 4 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 10\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 38\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 32 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 60 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 3 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 56 61 19 60\n6 4 73 87 96 19 60\n6 19 87 44 73 4 96\n", "output": "96 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 83 46 39 32 11 14\n20 90 55 28 52 56 84 9 30 25 31 73 66 77 42 95 21 6 75 96 24\n", "output": "21 90 \n"}, {"input": "3\n3 1 8 5\n2 1 4\n5 17 5 6 4 1\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 73 13 19 60\n6 4 19 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "10\n6 73 57 96 87 4 10\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 38\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 32 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "3\n3 1 11 5\n2 1 4\n5 17 5 6 4 1\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 52 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 73 13 19 60\n6 4 19 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "10\n6 73 42 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 52 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 73 13 19 60\n6 4 19 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 16 44 99 92 29 2 4 26 19 61 38 81 23 10 33 76 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "29 \n"}, {"input": "10\n6 73 60 96 87 4 24\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 60 96 \n"}, {"input": "5\n1 1\n10 10 9 8 7 100 5 4 3 99 1\n5 1 2 3 4 2\n5 4 1 3 2 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 15 4\n6 96 4 73 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 99 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 56 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 2 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 35 4 56 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 \n"}, {"input": "5\n1 1\n10 10 9 8 13 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 2 9\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 7 73 87 19 4\n6 96 4 56 87 19 60\n6 4 73 87 96 19 60\n6 19 87 44 73 4 96\n", "output": "4 \n"}, {"input": "2\n35 35 15 89 27 57 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "29 90 \n"}, {"input": "5\n1 1\n10 10 9 8 16 100 5 4 3 99 1\n4 1 2 3 4 5\n5 4 1 3 2 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "5\n1 1\n10 10 13 8 16 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 4 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 68 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 66 77 42 95 21 6 75 96 24\n", "output": "21 29 90 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 16 44 99 92 29 2 4 26 19 61 21 81 23 10 33 76 83 46 39 32 17 14\n20 90 64 28 52 56 84 9 30 25 29 73 11 77 42 95 13 6 75 96 24\n", "output": "29 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 45 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 13 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 60 96 87 4 10\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 10 19 60\n6 4 73 32 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 60 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 58 4 56 61 19 60\n6 4 73 87 96 19 60\n6 19 87 44 73 4 96\n", "output": "4 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 85 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 31 73 66 77 42 95 21 6 75 96 24\n", "output": "21 90 \n"}, {"input": "5\n1 1\n10 10 5 8 7 100 9 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 4 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 62 13 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "10\n6 73 60 96 87 4 10\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 38\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 12 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 32 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 3 18 73 87 96\n6 60 96 73 87 19 4\n6 96 4 56 61 19 60\n6 4 73 87 96 19 60\n6 19 87 44 92 4 96\n", "output": "96 \n"}, {"input": "3\n3 1 8 5\n2 1 4\n5 17 5 11 4 1\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 73 13 19 71\n6 4 19 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "10\n6 73 57 96 87 4 10\n7 87 73 25 19 96 4 60\n7 19 21 87 4 25 96 38\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 32 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 52 87 6 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 73 13 19 60\n6 4 19 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "10\n6 73 42 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 52 87 4 25 96 73\n6 4 87 60 19 30 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 73 13 19 60\n6 4 19 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 86 16 44 99 92 29 2 4 43 19 61 38 81 23 10 33 76 83 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "29 \n"}, {"input": "10\n6 73 60 96 87 4 24\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 77 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 60 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 15 4\n6 96 4 73 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 84 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 2 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 4\n6 35 4 56 87 19 60\n6 4 73 87 96 19 60\n6 6 87 60 73 4 96\n", "output": "4 \n"}, {"input": "5\n1 1\n10 10 9 8 13 100 5 4 3 99 1\n5 1 2 3 4 8\n5 4 1 3 2 9\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 7 73 87 19 4\n6 96 4 45 87 19 60\n6 4 73 87 96 19 60\n6 19 87 44 73 4 96\n", "output": "4 \n"}, {"input": "2\n35 35 15 89 27 57 72 54 41 58 97 18 93 86 1 44 99 92 29 2 4 26 19 61 21 81 23 10 33 90 11 46 39 32 17 14\n20 90 55 28 52 56 84 9 30 25 29 73 40 77 42 95 13 6 75 96 24\n", "output": "29 90 \n"}, {"input": "5\n1 1\n10 10 9 8 16 100 5 4 3 99 1\n4 1 2 2 4 5\n5 4 1 3 2 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "5\n1 1\n10 10 13 16 16 100 5 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 4 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 10\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 65\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 10 19 60\n6 4 73 32 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 60 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 1 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 62 13 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "3\n3 1 8 5\n2 1 4\n5 17 8 11 4 1\n", "output": "1 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 73 13 19 71\n6 4 23 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "10\n6 73 57 96 87 4 10\n7 87 73 25 18 96 4 60\n7 19 21 87 4 25 96 38\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 32 96 19 60\n6 19 87 60 73 4 96\n", "output": "4 96 \n"}, {"input": "10\n6 73 42 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 52 87 4 25 96 73\n6 4 87 60 19 30 96\n5 25 96 4 73 60\n6 25 4 18 73 87 96\n6 60 96 73 87 38 5\n6 96 4 73 13 19 60\n6 4 19 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "10\n6 73 60 96 87 4 24\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 77 60\n6 25 4 60 73 87 96\n6 60 96 73 87 19 4\n6 96 4 73 87 19 60\n6 4 73 87 96 27 60\n6 19 87 60 73 4 96\n", "output": "4 60 96 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 4 18 42 87 96\n6 60 96 73 87 15 4\n6 96 4 73 87 19 60\n6 4 73 87 96 19 60\n6 19 87 60 84 4 96\n", "output": "4 96 \n"}, {"input": "5\n1 1\n10 10 9 8 13 100 5 4 3 99 1\n5 1 2 3 4 8\n5 4 1 5 2 9\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "5\n1 1\n10 10 13 16 16 100 6 4 3 99 1\n5 1 2 3 4 5\n5 4 1 3 4 5\n4 10 1 5 3\n", "output": "1 \n"}, {"input": "2\n35 35 15 89 27 51 72 54 41 58 97 18 93 100 16 44 99 92 29 2 4 26 19 61 21 81 23 10 33 76 83 46 39 32 17 14\n20 90 64 28 52 56 84 9 30 25 29 73 11 77 42 95 13 6 33 96 24\n", "output": "29 33 \n"}, {"input": "10\n6 73 60 96 87 4 19\n7 87 73 25 19 96 4 60\n7 19 60 87 4 25 96 73\n6 4 87 60 19 25 96\n5 25 96 4 73 60\n6 25 1 18 73 87 96\n6 60 96 73 87 19 5\n6 96 4 62 8 19 60\n6 4 73 87 96 19 60\n6 19 87 60 73 4 96\n", "output": "96 \n"}, {"input": "3\n3 1 11 5\n2 1 4\n5 17 8 11 4 1\n", "output": "1 \n"}]}, "problem_space_curve_coefficient_list": [2652.9101289335663, 819.6188811188811, 812.8114346590909, 802.0103256118881, 799.9624125874126, 784.8058074737762, 784.777534965035, 783.23125, 778.833916083916, 743.7142857142857, 731.9624125874126, 718.8657943618881, 718.8616149475524, 718.8592930506993, 714.0152972027972, 714.0152972027972, 714.0152972027972, 714.0101343968531, 714.0023901879371, 714.0012702141609, 712.026838395979, 712.0249125874126, 712.0200639204545, 690.7871366914336, 683.9965034965035, 683.9965034965035, 683.993635270979, 683.9913133741259, 680.0606424825174, 680.0340909090909, 680.031878277972, 680.0260325611888, 680.0252813592657, 680.0240930944055, 679.0571596372378, 610.9270514641609, 555.8781004152098, 555.8781004152098, 555.8714625218531, 555.8702879152098, 538.0331621503497, 538.0152972027972, 538.0145460008741, 537.998169798951, 537.1115603146853, 537.1080091783217, 492.6259833916084, 492.62316979895104, 492.1057692307692, 490.08189466783216, 393.11156031468533, 392.09851671765733, 336.356479458042, 213.45397180944056, 210.3855031687063, 209.97667176573427], "human_label": true, "framework_note": ""}}, "1073_A. Diverse Substring": {"O(1)": {"problem_name": "1073_A. Diverse Substring", "problem_id": "1377", "solution_id": "1377_207", "description": "You are given a string s, consisting of n lowercase Latin letters.\n\nA substring of string s is a continuous segment of letters from s. For example, \"defor\" is a substring of \"codeforces\" and \"fors\" is not. \n\nThe length of the substring is the number of letters in it.\n\nLet's call some string of length n diverse if and only if there is no letter to appear strictly more than \\frac n 2 times. For example, strings \"abc\" and \"iltlml\" are diverse and strings \"aab\" and \"zz\" are not.\n\nYour task is to find any diverse substring of string s or report that there is none. Note that it is not required to maximize or minimize the length of the resulting substring.\n\nInput\n\nThe first line contains a single integer n (1 \u2264 n \u2264 1000) \u2014 the length of string s.\n\nThe second line is the string s, consisting of exactly n lowercase Latin letters.\n\nOutput\n\nPrint \"NO\" if there is no diverse substring in the string s.\n\nOtherwise the first line should contain \"YES\". The second line should contain any diverse substring of string s.\n\nExamples\n\nInput\n\n10\ncodeforces\n\n\nOutput\n\nYES\ncode\n\n\nInput\n\n5\naaaaa\n\n\nOutput\n\nNO\n\nNote\n\nThe first example has lots of correct answers. \n\nPlease, restrain yourself from asking if some specific answer is correct for some specific test or not, these questions always lead to \"No comments\" answer.", "solution_code": "n = int(input())\ns = input()\nfl = 0\nfor i in range(n-1):\n    if s[i] != s[i+1]:\n        print(\"YES\")\n        print(s[i]+s[i+1])\n        fl = 1\n        break\nif fl == 0:\n    print(\"NO\")\n", "dataclass_code": "import sys\nimport time\nimport itertools\nfrom itertools import accumulate, product, permutations, combinations\nimport collections\nfrom collections import Counter, OrderedDict, deque, defaultdict, ChainMap\nfrom functools import lru_cache\nimport math\nfrom math import sqrt, sin, cos, tan, ceil, fabs, floor, gcd, exp, log, log2\nimport fractions\nfrom typing import List, Tuple\nimport numpy as np\nimport random\nimport heapq\nfrom heapq import *\nfrom dataclasses import dataclass\n\nimport builtins\nimport re\n\ndef strip(s, characters = None):\n    if characters is None:\n        characters = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n    else:\n        characters = list(characters)\n\n    characters = [x for x in characters if len(x) > 0] \n\n    i = 0\n    while i < len(s):\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[i:i + len(sep_candidate)] == sep_candidate:\n                found_sep_candidate = True\n                i += len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    j = len(s) - 1\n    while j >= 0:\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[j + 1 - len(sep_candidate):j+1] == sep_candidate:\n                found_sep_candidate = True\n                j -= len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    return s[i:j+1]\n\ndef split(s, sep=None, maxsplit=-1):\n    if sep == '':\n        raise builtins.ValueError('empty separator')\n\n    if type(sep) == list and '' in sep:\n        raise builtins.ValueError('empty separator')\n\n    if sep is None:\n        sep = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n        result = []\n        word = ''\n        count_split = 0\n        \n        if maxsplit == -1:\n            maxsplit = len(s) * 1000\n\n        i = 0\n        while i < len(s):\n            found_sep_candidate = False\n\n            for sep_candidate in sep:\n                if s[i:i + len(sep_candidate)] == sep_candidate:\n                    found_sep_candidate = True\n\n                    if word:\n                        result.append(word)\n                        count_split += 1\n                        word = ''\n\n                    i += len(sep_candidate)\n                    break\n\n            if not found_sep_candidate and count_split < maxsplit:\n                word += s[i]\n                i += 1\n\n            elif not found_sep_candidate and count_split >= maxsplit:\n                word += s[i:]\n                i = len(s)\n\n        if word:\n            result.append(word)\n        return result\n    \n    if type(sep) == str:\n        sep = [sep]\n\n    if maxsplit == -1:\n        maxsplit = 0\n    elif maxsplit == 0:\n        maxsplit = -1\n\n    return re.split(re.compile(\"|\".join([re.escape(x) for x in sep])), s, maxsplit=maxsplit)\n\nclass str_escaped(str):\n    def split(self, sep=None, maxsplit=-1):\n        return split(self, sep=sep, maxsplit=maxsplit)\n    \n    def strip(self, chars=None):\n        return strip(self, characters = chars)\n\nfrom dataclasses import dataclass\n\n@dataclass\nclass Input:\n    n: int\n    s: str\n\n    @classmethod\n    def from_str(cls, input_: str):\n        n, s, _ = input_.split('\\n')\n        n = int(n)\n        return cls(n, s)\n\n    def __repr__(self):\n        return str(self.n) + '\\n' + self.s + '\\n'\n", "inputs_example": "5\naaaaa\n", "space_complexity_inferred": "O(1)", "space_curve_coefficient": 59.0, "tests": {"public_tests": [{"input": "5\naaaaa\n", "output": "NO\n"}, {"input": "10\ncodeforces\n", "output": "YES\nco\n"}], "private_tests": [{"input": "4\ncbba\n", "output": "YES\ncb\n"}, {"input": "6\naabbcc\n", "output": "YES\nab\n"}, {"input": "6\naabbab\n", "output": "YES\nab\n"}, {"input": "2\nss\n", "output": "NO\n"}, {"input": "2\nab\n", "output": "YES\nab\n"}, {"input": "3\nbaa\n", "output": "YES\nba\n"}, {"input": "3\nabb\n", "output": "YES\nab\n"}, {"input": "4\naaba\n", "output": "YES\nab\n"}, {"input": "1\ng\n", "output": "NO\n"}, {"input": "6\nsssssa\n", "output": "YES\nsa\n"}, {"input": "2\naa\n", "output": "NO\n"}, {"input": "5\naabaa\n", "output": "YES\nab\n"}, {"input": "4\naabb\n", "output": "YES\nab\n"}, {"input": "3\naba\n", "output": "YES\nab\n"}, {"input": "9\naabbccaab\n", "output": "YES\nab\n"}, {"input": "10\ncodeforces\n", "output": "YES\nco\n"}, {"input": "5\noomph\n", "output": "YES\nom\n"}, {"input": "25\nbbaaaaabaaaabbabaaaababaa\n", "output": "YES\nba\n"}, {"input": "7\naaabaaa\n", "output": "YES\nab\n"}, {"input": "3\noom\n", "output": "YES\nom\n"}, {"input": "3\naab\n", "output": "YES\nab\n"}, {"input": "5\nabbbb\n", "output": "YES\nab\n"}, {"input": "2\nqa\n", "output": "YES\nqa\n"}, {"input": "3\nbba\n", "output": "YES\nba\n"}, {"input": "9\naaaabbbbb\n", "output": "YES\nab\n"}, {"input": "6\nqaaaaa\n", "output": "YES\nqa\n"}, {"input": "6\nbaaaaa\n", "output": "YES\nba\n"}, {"input": "8\nabnmaaaa\n", "output": "YES\nab\n"}, {"input": "2\naz\n", "output": "YES\naz\n"}, {"input": "2\nba\n", "output": "YES\nba\n"}, {"input": "5\nabbba\n", "output": "YES\nab\n"}, {"input": "8\naaaabbba\n", "output": "YES\nab\n"}, {"input": "4\nbbaa\n", "output": "YES\nba\n"}, {"input": "7\nqaaqaaq\n", "output": "YES\nqa"}], "generated_tests": [{"input": "4\nabbc\n", "output": "YES\nab\n"}, {"input": "6\nccbbaa\n", "output": "YES\ncb\n"}, {"input": "2\nst\n", "output": "YES\nst\n"}, {"input": "2\nbb\n", "output": "NO\n"}, {"input": "3\nacb\n", "output": "YES\nac\n"}, {"input": "3\nbb`\n", "output": "YES\nb`\n"}, {"input": "6\nsssass\n", "output": "YES\nsa\n"}, {"input": "3\n`bb\n", "output": "YES\n`b\n"}, {"input": "10\nsodeforcec\n", "output": "YES\nso\n"}, {"input": "5\noomqh\n", "output": "YES\nom\n"}, {"input": "25\nbbaaaaabaaaabbabaaaabab`a\n", "output": "YES\nba\n"}, {"input": "3\nmoo\n", "output": "YES\nmo\n"}, {"input": "2\nq`\n", "output": "YES\nq`\n"}, {"input": "3\na`b\n", "output": "YES\na`\n"}, {"input": "6\nqabaaa\n", "output": "YES\nqa\n"}, {"input": "8\naaaamnba\n", "output": "YES\nam\n"}, {"input": "2\nay\n", "output": "YES\nay\n"}, {"input": "2\nca\n", "output": "YES\nca\n"}, {"input": "10\ncodefoqces\n", "output": "YES\nco\n"}, {"input": "6\nbcbbaa\n", "output": "YES\nbc\n"}, {"input": "2\nts\n", "output": "YES\nts\n"}, {"input": "2\nda\n", "output": "YES\nda\n"}, {"input": "3\nbb_\n", "output": "YES\nb_\n"}, {"input": "2\ndb\n", "output": "YES\ndb\n"}, {"input": "3\nmpo\n", "output": "YES\nmp\n"}, {"input": "2\n`q\n", "output": "YES\n`q\n"}, {"input": "2\n`y\n", "output": "YES\n`y\n"}, {"input": "10\nsecqofedoc\n", "output": "YES\nse\n"}, {"input": "2\nd`\n", "output": "YES\nd`\n"}, {"input": "6\nsss`ts\n", "output": "YES\ns`\n"}, {"input": "2\nbd\n", "output": "YES\nbd\n"}, {"input": "5\nopmqg\n", "output": "YES\nop\n"}, {"input": "6\nabbbab\n", "output": "YES\nab\n"}, {"input": "4\naaca\n", "output": "YES\nac\n"}, {"input": "1\nh\n", "output": "NO\n"}, {"input": "2\ncb\n", "output": "YES\ncb\n"}, {"input": "5\naab`a\n", "output": "YES\nab\n"}, {"input": "4\naaab\n", "output": "YES\nab\n"}, {"input": "9\nacbbcaaab\n", "output": "YES\nac\n"}, {"input": "7\naaaaaab\n", "output": "YES\nab\n"}, {"input": "3\naaa\n", "output": "NO\n"}, {"input": "5\nabbab\n", "output": "YES\nab\n"}, {"input": "9\naaaabbcbb\n", "output": "YES\nab\n"}, {"input": "6\nbabaaa\n", "output": "YES\nba\n"}, {"input": "5\nbbbaa\n", "output": "YES\nba\n"}, {"input": "8\nbaaabbba\n", "output": "YES\nba\n"}, {"input": "4\nbb`a\n", "output": "YES\nb`\n"}, {"input": "7\nqaaaaqq\n", "output": "YES\nqa\n"}, {"input": "5\naaaa`\n", "output": "YES\na`\n"}, {"input": "4\nabbb\n", "output": "YES\nab\n"}, {"input": "6\nacbbab\n", "output": "YES\nac\n"}, {"input": "3\ncab\n", "output": "YES\nca\n"}, {"input": "4\na`ca\n", "output": "YES\na`\n"}, {"input": "1\ni\n", "output": "NO\n"}, {"input": "6\nsssats\n", "output": "YES\nsa\n"}, {"input": "5\na`baa\n", "output": "YES\na`\n"}, {"input": "4\naaaa\n", "output": "NO\n"}, {"input": "3\ncb_\n", "output": "YES\ncb\n"}, {"input": "9\naccbcaaab\n", "output": "YES\nac\n"}, {"input": "10\nsodofercec\n", "output": "YES\nso\n"}, {"input": "5\noomqg\n", "output": "YES\nom\n"}, {"input": "25\nbbaaaaabaaaabbabaaaacab`a\n", "output": "YES\nba\n"}, {"input": "7\nbaaaaaa\n", "output": "YES\nba\n"}, {"input": "3\nbab\n", "output": "YES\nba\n"}, {"input": "5\nacbab\n", "output": "YES\nac\n"}, {"input": "3\nb`b\n", "output": "YES\nb`\n"}, {"input": "9\naaaabbcba\n", "output": "YES\nab\n"}, {"input": "6\nqacaaa\n", "output": "YES\nqa\n"}, {"input": "6\naaabab\n", "output": "YES\nab\n"}, {"input": "8\n`bnmaaaa\n", "output": "YES\n`b\n"}, {"input": "2\nbc\n", "output": "YES\nbc\n"}, {"input": "5\nbbaaa\n", "output": "YES\nba\n"}, {"input": "8\naababbba\n", "output": "YES\nab\n"}, {"input": "4\nba`a\n", "output": "YES\nba\n"}, {"input": "7\nqaaaaqr\n", "output": "YES\nqa\n"}, {"input": "5\naaa`a\n", "output": "YES\na`\n"}, {"input": "4\nbbba\n", "output": "YES\nba\n"}, {"input": "6\nbcbaaa\n", "output": "YES\nbc\n"}, {"input": "6\nacbb`b\n", "output": "YES\nac\n"}, {"input": "2\ntt\n", "output": "NO\n"}, {"input": "3\nbac\n", "output": "YES\nba\n"}, {"input": "3\nb_b\n", "output": "YES\nb_\n"}, {"input": "4\nac`a\n", "output": "YES\nac\n"}, {"input": "1\nf\n", "output": "NO\n"}, {"input": "5\na`ba`\n", "output": "YES\na`\n"}, {"input": "4\na`aa\n", "output": "YES\na`\n"}, {"input": "3\ncb^\n", "output": "YES\ncb\n"}, {"input": "9\nbaaacbcca\n", "output": "YES\nba\n"}, {"input": "10\nsoodfercec\n", "output": "YES\nso\n"}, {"input": "25\na`bacaaaababbaaaabaaaaabb\n", "output": "YES\na`\n"}, {"input": "7\nbaaaaa`\n", "output": "YES\nba\n"}, {"input": "3\nmpn\n", "output": "YES\nmp\n"}, {"input": "3\nba`\n", "output": "YES\nba\n"}]}, "problem_space_curve_coefficient_list": [2091.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 2032.0, 1928.0, 1766.0, 1696.0, 1550.0, 1550.0, 1536.0, 1424.0, 1232.0, 1049.0, 944.0, 876.0, 660.0, 195.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 106.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 96.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 16.0, 7.0, 7.0, 6.0, 3.0, 1.0], "human_label": true, "framework_note": ""}, "O(n)": {"problem_name": "1073_A. Diverse Substring", "problem_id": "1377", "solution_id": "1377_237", "description": "You are given a string s, consisting of n lowercase Latin letters.\n\nA substring of string s is a continuous segment of letters from s. For example, \"defor\" is a substring of \"codeforces\" and \"fors\" is not. \n\nThe length of the substring is the number of letters in it.\n\nLet's call some string of length n diverse if and only if there is no letter to appear strictly more than \\frac n 2 times. For example, strings \"abc\" and \"iltlml\" are diverse and strings \"aab\" and \"zz\" are not.\n\nYour task is to find any diverse substring of string s or report that there is none. Note that it is not required to maximize or minimize the length of the resulting substring.\n\nInput\n\nThe first line contains a single integer n (1 \u2264 n \u2264 1000) \u2014 the length of string s.\n\nThe second line is the string s, consisting of exactly n lowercase Latin letters.\n\nOutput\n\nPrint \"NO\" if there is no diverse substring in the string s.\n\nOtherwise the first line should contain \"YES\". The second line should contain any diverse substring of string s.\n\nExamples\n\nInput\n\n10\ncodeforces\n\n\nOutput\n\nYES\ncode\n\n\nInput\n\n5\naaaaa\n\n\nOutput\n\nNO\n\nNote\n\nThe first example has lots of correct answers. \n\nPlease, restrain yourself from asking if some specific answer is correct for some specific test or not, these questions always lead to \"No comments\" answer.", "solution_code": "n = input()\ns = list(input())\nres = \"\"\nflag = 1\n\nfor i in s:\n    if i not in res:\n        res += i\n    if len(res) >= 2:\n        print(\"YES\\n\" + res)\n        flag = 0\n        break\n\nif flag == 1:\n    print(\"NO\")\n", "dataclass_code": "import sys\nimport time\nimport itertools\nfrom itertools import accumulate, product, permutations, combinations\nimport collections\nfrom collections import Counter, OrderedDict, deque, defaultdict, ChainMap\nfrom functools import lru_cache\nimport math\nfrom math import sqrt, sin, cos, tan, ceil, fabs, floor, gcd, exp, log, log2\nimport fractions\nfrom typing import List, Tuple\nimport numpy as np\nimport random\nimport heapq\nfrom heapq import *\nfrom dataclasses import dataclass\n\nimport builtins\nimport re\n\ndef strip(s, characters = None):\n    if characters is None:\n        characters = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n    else:\n        characters = list(characters)\n\n    characters = [x for x in characters if len(x) > 0] \n\n    i = 0\n    while i < len(s):\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[i:i + len(sep_candidate)] == sep_candidate:\n                found_sep_candidate = True\n                i += len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    j = len(s) - 1\n    while j >= 0:\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[j + 1 - len(sep_candidate):j+1] == sep_candidate:\n                found_sep_candidate = True\n                j -= len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    return s[i:j+1]\n\ndef split(s, sep=None, maxsplit=-1):\n    if sep == '':\n        raise builtins.ValueError('empty separator')\n\n    if type(sep) == list and '' in sep:\n        raise builtins.ValueError('empty separator')\n\n    if sep is None:\n        sep = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n        result = []\n        word = ''\n        count_split = 0\n        \n        if maxsplit == -1:\n            maxsplit = len(s) * 1000\n\n        i = 0\n        while i < len(s):\n            found_sep_candidate = False\n\n            for sep_candidate in sep:\n                if s[i:i + len(sep_candidate)] == sep_candidate:\n                    found_sep_candidate = True\n\n                    if word:\n                        result.append(word)\n                        count_split += 1\n                        word = ''\n\n                    i += len(sep_candidate)\n                    break\n\n            if not found_sep_candidate and count_split < maxsplit:\n                word += s[i]\n                i += 1\n\n            elif not found_sep_candidate and count_split >= maxsplit:\n                word += s[i:]\n                i = len(s)\n\n        if word:\n            result.append(word)\n        return result\n    \n    if type(sep) == str:\n        sep = [sep]\n\n    if maxsplit == -1:\n        maxsplit = 0\n    elif maxsplit == 0:\n        maxsplit = -1\n\n    return re.split(re.compile(\"|\".join([re.escape(x) for x in sep])), s, maxsplit=maxsplit)\n\nclass str_escaped(str):\n    def split(self, sep=None, maxsplit=-1):\n        return split(self, sep=sep, maxsplit=maxsplit)\n    \n    def strip(self, chars=None):\n        return strip(self, characters = chars)\n\nfrom dataclasses import dataclass\n\n@dataclass\nclass Input:\n    n: int\n    s: str\n\n    @classmethod\n    def from_str(cls, input_: str):\n        n, s, _ = input_.split('\\n')\n        n = int(n)\n        return cls(n, s)\n\n    def __repr__(self):\n        return str(self.n) + '\\n' + self.s + '\\n'\n", "inputs_example": "5\naaaaa\n", "space_complexity_inferred": "O(n)", "space_curve_coefficient": 39.97984047202797, "tests": {"public_tests": [{"input": "5\naaaaa\n", "output": "NO\n"}, {"input": "10\ncodeforces\n", "output": "YES\nco\n"}], "private_tests": [{"input": "4\ncbba\n", "output": "YES\ncb\n"}, {"input": "6\naabbcc\n", "output": "YES\nab\n"}, {"input": "6\naabbab\n", "output": "YES\nab\n"}, {"input": "2\nss\n", "output": "NO\n"}, {"input": "2\nab\n", "output": "YES\nab\n"}, {"input": "3\nbaa\n", "output": "YES\nba\n"}, {"input": "3\nabb\n", "output": "YES\nab\n"}, {"input": "4\naaba\n", "output": "YES\nab\n"}, {"input": "1\ng\n", "output": "NO\n"}, {"input": "6\nsssssa\n", "output": "YES\nsa\n"}, {"input": "2\naa\n", "output": "NO\n"}, {"input": "5\naabaa\n", "output": "YES\nab\n"}, {"input": "4\naabb\n", "output": "YES\nab\n"}, {"input": "3\naba\n", "output": "YES\nab\n"}, {"input": "9\naabbccaab\n", "output": "YES\nab\n"}, {"input": "10\ncodeforces\n", "output": "YES\nco\n"}, {"input": "5\noomph\n", "output": "YES\nom\n"}, {"input": "25\nbbaaaaabaaaabbabaaaababaa\n", "output": "YES\nba\n"}, {"input": "7\naaabaaa\n", "output": "YES\nab\n"}, {"input": "3\noom\n", "output": "YES\nom\n"}, {"input": "3\naab\n", "output": "YES\nab\n"}, {"input": "5\nabbbb\n", "output": "YES\nab\n"}, {"input": "2\nqa\n", "output": "YES\nqa\n"}, {"input": "3\nbba\n", "output": "YES\nba\n"}, {"input": "9\naaaabbbbb\n", "output": "YES\nab\n"}, {"input": "6\nqaaaaa\n", "output": "YES\nqa\n"}, {"input": "6\nbaaaaa\n", "output": "YES\nba\n"}, {"input": "8\nabnmaaaa\n", "output": "YES\nab\n"}, {"input": "2\naz\n", "output": "YES\naz\n"}, {"input": "2\nba\n", "output": "YES\nba\n"}, {"input": "5\nabbba\n", "output": "YES\nab\n"}, {"input": "8\naaaabbba\n", "output": "YES\nab\n"}, {"input": "4\nbbaa\n", "output": "YES\nba\n"}, {"input": "7\nqaaqaaq\n", "output": "YES\nqa"}], "generated_tests": [{"input": "4\nabbc\n", "output": "YES\nab\n"}, {"input": "6\nccbbaa\n", "output": "YES\ncb\n"}, {"input": "2\nst\n", "output": "YES\nst\n"}, {"input": "2\nbb\n", "output": "NO\n"}, {"input": "3\nacb\n", "output": "YES\nac\n"}, {"input": "3\nbb`\n", "output": "YES\nb`\n"}, {"input": "6\nsssass\n", "output": "YES\nsa\n"}, {"input": "3\n`bb\n", "output": "YES\n`b\n"}, {"input": "10\nsodeforcec\n", "output": "YES\nso\n"}, {"input": "5\noomqh\n", "output": "YES\nom\n"}, {"input": "25\nbbaaaaabaaaabbabaaaabab`a\n", "output": "YES\nba\n"}, {"input": "3\nmoo\n", "output": "YES\nmo\n"}, {"input": "2\nq`\n", "output": "YES\nq`\n"}, {"input": "3\na`b\n", "output": "YES\na`\n"}, {"input": "6\nqabaaa\n", "output": "YES\nqa\n"}, {"input": "8\naaaamnba\n", "output": "YES\nam\n"}, {"input": "2\nay\n", "output": "YES\nay\n"}, {"input": "2\nca\n", "output": "YES\nca\n"}, {"input": "10\ncodefoqces\n", "output": "YES\nco\n"}, {"input": "6\nbcbbaa\n", "output": "YES\nbc\n"}, {"input": "2\nts\n", "output": "YES\nts\n"}, {"input": "2\nda\n", "output": "YES\nda\n"}, {"input": "3\nbb_\n", "output": "YES\nb_\n"}, {"input": "2\ndb\n", "output": "YES\ndb\n"}, {"input": "3\nmpo\n", "output": "YES\nmp\n"}, {"input": "2\n`q\n", "output": "YES\n`q\n"}, {"input": "2\n`y\n", "output": "YES\n`y\n"}, {"input": "10\nsecqofedoc\n", "output": "YES\nse\n"}, {"input": "2\nd`\n", "output": "YES\nd`\n"}, {"input": "6\nsss`ts\n", "output": "YES\ns`\n"}, {"input": "2\nbd\n", "output": "YES\nbd\n"}, {"input": "5\nopmqg\n", "output": "YES\nop\n"}, {"input": "6\nabbbab\n", "output": "YES\nab\n"}, {"input": "4\naaca\n", "output": "YES\nac\n"}, {"input": "1\nh\n", "output": "NO\n"}, {"input": "2\ncb\n", "output": "YES\ncb\n"}, {"input": "5\naab`a\n", "output": "YES\nab\n"}, {"input": "4\naaab\n", "output": "YES\nab\n"}, {"input": "9\nacbbcaaab\n", "output": "YES\nac\n"}, {"input": "7\naaaaaab\n", "output": "YES\nab\n"}, {"input": "3\naaa\n", "output": "NO\n"}, {"input": "5\nabbab\n", "output": "YES\nab\n"}, {"input": "9\naaaabbcbb\n", "output": "YES\nab\n"}, {"input": "6\nbabaaa\n", "output": "YES\nba\n"}, {"input": "5\nbbbaa\n", "output": "YES\nba\n"}, {"input": "8\nbaaabbba\n", "output": "YES\nba\n"}, {"input": "4\nbb`a\n", "output": "YES\nb`\n"}, {"input": "7\nqaaaaqq\n", "output": "YES\nqa\n"}, {"input": "5\naaaa`\n", "output": "YES\na`\n"}, {"input": "4\nabbb\n", "output": "YES\nab\n"}, {"input": "6\nacbbab\n", "output": "YES\nac\n"}, {"input": "3\ncab\n", "output": "YES\nca\n"}, {"input": "4\na`ca\n", "output": "YES\na`\n"}, {"input": "1\ni\n", "output": "NO\n"}, {"input": "6\nsssats\n", "output": "YES\nsa\n"}, {"input": "5\na`baa\n", "output": "YES\na`\n"}, {"input": "4\naaaa\n", "output": "NO\n"}, {"input": "3\ncb_\n", "output": "YES\ncb\n"}, {"input": "9\naccbcaaab\n", "output": "YES\nac\n"}, {"input": "10\nsodofercec\n", "output": "YES\nso\n"}, {"input": "5\noomqg\n", "output": "YES\nom\n"}, {"input": "25\nbbaaaaabaaaabbabaaaacab`a\n", "output": "YES\nba\n"}, {"input": "7\nbaaaaaa\n", "output": "YES\nba\n"}, {"input": "3\nbab\n", "output": "YES\nba\n"}, {"input": "5\nacbab\n", "output": "YES\nac\n"}, {"input": "3\nb`b\n", "output": "YES\nb`\n"}, {"input": "9\naaaabbcba\n", "output": "YES\nab\n"}, {"input": "6\nqacaaa\n", "output": "YES\nqa\n"}, {"input": "6\naaabab\n", "output": "YES\nab\n"}, {"input": "8\n`bnmaaaa\n", "output": "YES\n`b\n"}, {"input": "2\nbc\n", "output": "YES\nbc\n"}, {"input": "5\nbbaaa\n", "output": "YES\nba\n"}, {"input": "8\naababbba\n", "output": "YES\nab\n"}, {"input": "4\nba`a\n", "output": "YES\nba\n"}, {"input": "7\nqaaaaqr\n", "output": "YES\nqa\n"}, {"input": "5\naaa`a\n", "output": "YES\na`\n"}, {"input": "4\nbbba\n", "output": "YES\nba\n"}, {"input": "6\nbcbaaa\n", "output": "YES\nbc\n"}, {"input": "6\nacbb`b\n", "output": "YES\nac\n"}, {"input": "2\ntt\n", "output": "NO\n"}, {"input": "3\nbac\n", "output": "YES\nba\n"}, {"input": "3\nb_b\n", "output": "YES\nb_\n"}, {"input": "4\nac`a\n", "output": "YES\nac\n"}, {"input": "1\nf\n", "output": "NO\n"}, {"input": "5\na`ba`\n", "output": "YES\na`\n"}, {"input": "4\na`aa\n", "output": "YES\na`\n"}, {"input": "3\ncb^\n", "output": "YES\ncb\n"}, {"input": "9\nbaaacbcca\n", "output": "YES\nba\n"}, {"input": "10\nsoodfercec\n", "output": "YES\nso\n"}, {"input": "25\na`bacaaaababbaaaabaaaaabb\n", "output": "YES\na`\n"}, {"input": "7\nbaaaaa`\n", "output": "YES\nba\n"}, {"input": "3\nmpn\n", "output": "YES\nmp\n"}, {"input": "3\nba`\n", "output": "YES\nba\n"}]}, "problem_space_curve_coefficient_list": [1778.0, 352.4947962194056, 297.99672202797206, 297.97115384615387, 267.9601999562937, 86.06968422202797, 80.81703452797203, 42.97892537150349, 42.97044361888112, 42.96898218968531, 42.96480277534965, 40.04381555944056, 40.02901005244755, 40.02605987762238, 40.02556818181818, 40.02462576486014, 40.02201704545455, 40.02059659090909, 40.01694984702797, 40.01611669580419, 40.01475087412587, 40.00172093531469, 40.00117460664335, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 39.99919416520979, 39.99877076048951, 39.99842930506993, 39.99786931818182, 39.99644886363637, 39.99597082604895, 39.99502840909091, 39.99497377622377, 39.99465963723776, 39.99431818181818, 39.99408599213287, 39.99282943618881, 39.99205091783217, 39.99004315996503, 39.9899885270979, 39.9899885270979, 39.98981097027972, 39.98579545454545, 39.98493498688811, 39.97984047202797, 39.97933511800699, 10.239188492714238, 9.995970826048952, 9.806312827797203, 5.069015602305205, 5.052297312062937, 5.027193509615385, 5.025568181818182, 5.024844296328672, 5.014122596153846, 5.0135762674825175, 5.008112980769231, 5.0, 5.0, 5.0, 4.999931708916084, 4.997159090909091, 4.995970826048951, 4.993607954545454, 4.9916684877622375, 4.991313374125874, 4.98361013986014, 4.978911713286713, 4.801190996503497, 4.704258631993007, 4.577464788732394, 2.2912341564685317, 2.2912341564685317, 1.5715222789673429, 0.4327991848832901, 0.3181818181818182, 0.16899239975941685, 0.1681952522238114, 0.16401670268699153, 0.15494015637905084, 0.1540653085421409, 0.1540653085421409, 0.15341205045339565, 0.11590582723481895, 0.10881783308248606, 0.05227215825536923, 0.029010052447552448, 0.02828616695804196, 0.028204217657342656, 0.026059877622377624, 0.02556818181818182, 0.02556818181818182, 0.02556818181818182, 0.02556818181818182], "human_label": true, "framework_note": ""}}, "1111_A. Superhero Transformation": {"O(1)": {"problem_name": "1111_A. Superhero Transformation", "problem_id": "2436", "solution_id": "2436_247", "description": "We all know that a superhero can transform to certain other superheroes. But not all Superheroes can transform to any other superhero. A superhero with name s can transform to another superhero with name t if s can be made equal to t by changing any vowel in s to any other vowel and any consonant in s to any other consonant. Multiple changes can be made.\n\nIn this problem, we consider the letters 'a', 'e', 'i', 'o' and 'u' to be vowels and all the other letters to be consonants.\n\nGiven the names of two superheroes, determine if the superhero with name s can be transformed to the Superhero with name t.\n\nInput\n\nThe first line contains the string s having length between 1 and 1000, inclusive.\n\nThe second line contains the string t having length between 1 and 1000, inclusive.\n\nBoth strings s and t are guaranteed to be different and consist of lowercase English letters only.\n\nOutput\n\nOutput \"Yes\" (without quotes) if the superhero with name s can be transformed to the superhero with name t and \"No\" (without quotes) otherwise.\n\nYou can print each letter in any case (upper or lower).\n\nExamples\n\nInput\n\n\na\nu\n\n\nOutput\n\n\nYes\n\n\nInput\n\n\nabc\nukm\n\n\nOutput\n\n\nYes\n\n\nInput\n\n\nakm\nua\n\n\nOutput\n\n\nNo\n\nNote\n\nIn the first sample, since both 'a' and 'u' are vowels, it is possible to convert string s to t.\n\nIn the third sample, 'k' is a consonant, whereas 'a' is a vowel, so it is not possible to convert string s to t.", "solution_code": "s=input()\nt=input()\nv='aeiou'\ncons='qwrtyplkjhgfdszxcvbnm'\nif(len(s)!=len(t)):\n    print(\"no\")\nelse:\n    for i in range(len(s)):\n        if(s[i] in v and t[i] in cons) or s[i] in cons and t[i] in v:\n            print(\"No\")\n            exit(0)\n\n    print(\"Yes\")\n", "dataclass_code": "import sys\nimport time\nimport itertools\nfrom itertools import accumulate, product, permutations, combinations\nimport collections\nfrom collections import Counter, OrderedDict, deque, defaultdict, ChainMap\nfrom functools import lru_cache\nimport math\nfrom math import sqrt, sin, cos, tan, ceil, fabs, floor, gcd, exp, log, log2\nimport fractions\nfrom typing import List, Tuple\nimport numpy as np\nimport random\nimport heapq\nfrom heapq import *\nfrom dataclasses import dataclass\n\nimport builtins\nimport re\n\ndef strip(s, characters = None):\n    if characters is None:\n        characters = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n    else:\n        characters = list(characters)\n\n    characters = [x for x in characters if len(x) > 0] \n\n    i = 0\n    while i < len(s):\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[i:i + len(sep_candidate)] == sep_candidate:\n                found_sep_candidate = True\n                i += len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    j = len(s) - 1\n    while j >= 0:\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[j + 1 - len(sep_candidate):j+1] == sep_candidate:\n                found_sep_candidate = True\n                j -= len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    return s[i:j+1]\n\ndef split(s, sep=None, maxsplit=-1):\n    if sep == '':\n        raise builtins.ValueError('empty separator')\n\n    if type(sep) == list and '' in sep:\n        raise builtins.ValueError('empty separator')\n\n    if sep is None:\n        sep = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n        result = []\n        word = ''\n        count_split = 0\n        \n        if maxsplit == -1:\n            maxsplit = len(s) * 1000\n\n        i = 0\n        while i < len(s):\n            found_sep_candidate = False\n\n            for sep_candidate in sep:\n                if s[i:i + len(sep_candidate)] == sep_candidate:\n                    found_sep_candidate = True\n\n                    if word:\n                        result.append(word)\n                        count_split += 1\n                        word = ''\n\n                    i += len(sep_candidate)\n                    break\n\n            if not found_sep_candidate and count_split < maxsplit:\n                word += s[i]\n                i += 1\n\n            elif not found_sep_candidate and count_split >= maxsplit:\n                word += s[i:]\n                i = len(s)\n\n        if word:\n            result.append(word)\n        return result\n    \n    if type(sep) == str:\n        sep = [sep]\n\n    if maxsplit == -1:\n        maxsplit = 0\n    elif maxsplit == 0:\n        maxsplit = -1\n\n    return re.split(re.compile(\"|\".join([re.escape(x) for x in sep])), s, maxsplit=maxsplit)\n\nclass str_escaped(str):\n    def split(self, sep=None, maxsplit=-1):\n        return split(self, sep=sep, maxsplit=maxsplit)\n    \n    def strip(self, chars=None):\n        return strip(self, characters = chars)\n\nfrom dataclasses import dataclass\n\n@dataclass\nclass Input:\n    a: str\n    b: str\n\n    @classmethod\n    def from_str(cls, input_: str):\n        a, b, _ = input_.split('\\n')\n        return cls(a, b)\n\n    def __repr__(self):\n        return self.a + '\\n' + self.b + '\\n'\n", "inputs_example": "akm\nua\n", "space_complexity_inferred": "O(1)", "space_curve_coefficient": 59.0, "tests": {"public_tests": [{"input": "akm\nua\n", "output": "No\n"}, {"input": "a\nu\n", "output": "YES\n"}, {"input": "abc\nukm\n", "output": "YES\n"}], "private_tests": [{"input": "b\na\n", "output": "NO\n"}, {"input": "abcdef\ncdabef\n", "output": "NO\n"}, {"input": "ka\nak\n", "output": "NO\n"}, {"input": "aabcd\nbcaad\n", "output": "NO\n"}, {"input": "aabb\nabab\n", "output": "NO\n"}, {"input": "zenudggmyopddhszhrbmftgzmjorabhgojdtfnzxjkayjlkgczsyshczutkdchiytqlfsevymipufxkxojlvkkqxvjhpjmcxeiluua\nblcdiwjphlpzwvknsyvbcodpyktizgatrlieiikktghixbikehsiknjuateltwkyyhgabygwtclyeyquaoiqnypoxnvyzvyhfejole\n", "output": "NO\n"}, {"input": "oihjee\naedcouklbbbcccvfgjkl\n", "output": "No\n"}, {"input": "abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n", "output": "NO\n"}, {"input": "am\nma\n", "output": "NO\n"}, {"input": "aaa\naa\n", "output": "No\n"}, {"input": "abcdefghikl\njhg\n", "output": "No\n"}, {"input": "bcd\naei\n", "output": "NO\n"}, {"input": "abab\naabb\n", "output": "NO\n"}, {"input": "abcd\na\n", "output": "No\n"}, {"input": "eieoiiieaiuiiauieeuoueeoudljpjrpxdtqkrdfmhktpqrnkmyggywglpfpfmhrbaiioeuaieaouaoioaiuoiuueuaoouaeeoaaaueauueeiuaueuaeouiaaaieeaeiuouoiooauuoeauaiaoouuauuuuocqschpcxrxrgrcsjmwcbyfvtdxqtwha\naoeaoaoueieeioooiaooeoeoitvplxwkprykbhvxylcnxrhpgqclyjgfpzdpqwlcvouooeueoouieioeuouieoaaueuiiiaeoiaeueoiaioaioauiuuuuiaieauaeaieeeueouaeoaoeouuoioaaooaeiiopwbyvkywxvqqtxnzpswdwtzywfpslju\n", "output": "YES\n"}, {"input": "abc\nkmu\n", "output": "NO\n"}, {"input": "aaa\naaabb\n", "output": "No\n"}, {"input": "abaa\naaba\n", "output": "NO\n"}, {"input": "abc\ncde\n", "output": "NO\n"}, {"input": "uam\nua\n", "output": "No\n"}, {"input": "aaaaaeeeeeiiiiiooooouuuuu\naeiouaeiouaeiouaeiouaeiou\n", "output": "YES\n"}, {"input": "aabb\nbbaa\n", "output": "NO\n"}, {"input": "aaabbb\nbbbaaa\n", "output": "NO\n"}, {"input": "aab\nbaa\n", "output": "NO\n"}, {"input": "f\nk\n", "output": "YES\n"}, {"input": "aba\nbaa\n", "output": "NO\n"}, {"input": "ba\nab\n", "output": "NO\n"}, {"input": "aabb\naaabbb\n", "output": "No\n"}, {"input": "bb\nb\n", "output": "No\n"}, {"input": "abc\nbca\n", "output": "NO\n"}, {"input": "aaaaaeeeeeiiiiiooooouuuuu\nqwrtysdfghjklzxcvbnmplmjk\n", "output": "NO\n"}, {"input": "abc\ncab\n", "output": "NO\n"}, {"input": "oujhgi\nabklpoooeisididisicmdmscdcdsa\n", "output": "No\n"}, {"input": "ak\nka\n", "output": "NO\n"}, {"input": "anne\nnnae\n", "output": "NO\n"}, {"input": "a\naa\n", "output": "No\n"}, {"input": "abcdef\ncdaebf\n", "output": "NO\n"}, {"input": "aaba\nabaa\n", "output": "NO\n"}, {"input": "aq\nqa\n", "output": "NO\n"}, {"input": "art\ntor\n", "output": "NO\n"}, {"input": "eeiaoouoouaiaiizjgkmwdqsgvqltfylymtdfrggphtfcaieiuueouaeieeiuuieuieaaeueiaeuaaiuiauueuiuieeaaoudymrtstxqsa\nouiiuaaaieiaueetzfpsncxlscpkwjlqymqqyckydhrhweueoeoeaauiiuaeauueuioueuioeoeoooeeuieoiouaieeuieegmrhdbfwttu\n", "output": "YES\n"}, {"input": "ab\na\n", "output": "No\n"}, {"input": "ab\nba\n", "output": "NO\n"}, {"input": "abc\ned\n", "output": "No\n"}, {"input": "def\nabc\n", "output": "NO\n"}, {"input": "abcde\nbcaed\n", "output": "NO\n"}, {"input": "az\nza\n", "output": "NO\n"}, {"input": "abc\ndef\n", "output": "NO\n"}, {"input": "u\nd\n", "output": "NO\n"}, {"input": "z\no\n", "output": "NO\n"}, {"input": "zdfouibgjjjkjkkkklllllalllalas\nrtgaoufk\n", "output": "No\n"}, {"input": "dkjsafhdlgfkjhdsgklhfjaghlfkdfjghfjhgldhfgkjlhksdhgkjdshfhgkjashgfshah\ndkjsafhdlgfkjhdsgklhfjaghlfkdfjghfjhgldhfgkjlhksdhgkjdshfhgkjashgfsha\n", "output": "No\n"}, {"input": "abab\nbaba\n", "output": "NO\n"}], "generated_tests": [{"input": "a\na\n", "output": "Yes\n"}, {"input": "`bcdef\ncdabef\n", "output": "No\n"}, {"input": "ka\n`k\n", "output": "No\n"}, {"input": "dcbaa\nbcaad\n", "output": "No\n"}, {"input": "abab\nabab\n", "output": "Yes\n"}, {"input": "zenudggmyopddhszhrbmftgzmjorabhgojdtfnzxjkayjlkgczsyshczutkdchiytqlfsevymipufxkxojlvkkqxvjhpjmcxeiluua\nblcdiwjphlpzwvknsyvbcodpyktizgatrlieiikktghixbikehsiknjuaseltwkyyhgabygwtclyeyquaoiqnypoxnvyzvyhfejole\n", "output": "No\n"}, {"input": "oehjei\naedcouklbbbcccvfgjkl\n", "output": "No\n"}, {"input": "abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbcbbbbbbbbbbbbb\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n", "output": "No\n"}, {"input": "am\nam\n", "output": "Yes\n"}, {"input": "baa\naa\n", "output": "No\n"}, {"input": "abcdeeghikl\njhg\n", "output": "No\n"}, {"input": "bcd\niea\n", "output": "No\n"}, {"input": "abab\nbbaa\n", "output": "No\n"}, {"input": "abdc\na\n", "output": "No\n"}, {"input": "eieoiiieaiuiiauieeuoueeoudljpjrpxdtqkrdfmhktpqrnkmyggywglpfpfmhrbaiioeuaieaouaoioaiuoiuueuaoouaeeoaaaueauueeiuaueuaeouiaaaieeaeiuouoiooauuoeauaiaoouuauuuuocqschpcxrxrgrcsjmwcbyfvtdxqtwha\naoeaoaoueieeioooiapoeoeoitvplxwkprykbhvxylcnxrhpgqclyjgfpzdpqwlcvouooeueoouieioeuouieoaaueuiiiaeoiaeueoiaioaioauiuuuuiaieauaeaieeeueouaeoaoeouuoioaaooaeiiopwbyvkywxvqqtxnzpswdwtzywfpslju\n", "output": "No\n"}, {"input": "abc\nkmv\n", "output": "No\n"}, {"input": "`aa\naaabb\n", "output": "No\n"}, {"input": "acaa\naaba\n", "output": "No\n"}, {"input": "bac\ncde\n", "output": "No\n"}, {"input": "mau\nua\n", "output": "No\n"}, {"input": "aaaaaeeeeeiiiihooooouuuuu\naeiouaeiouaeiouaeiouaeiou\n", "output": "No\n"}, {"input": "aaab\nbbaa\n", "output": "No\n"}, {"input": "aaacbb\nbbbaaa\n", "output": "No\n"}, {"input": "aab\ncaa\n", "output": "No\n"}, {"input": "g\nk\n", "output": "Yes\n"}, {"input": "aba\nba`\n", "output": "No\n"}, {"input": "b`\nab\n", "output": "No\n"}, {"input": "bbaa\naaabbb\n", "output": "No\n"}, {"input": "bb\na\n", "output": "No\n"}, {"input": "abc\nacb\n", "output": "Yes\n"}, {"input": "uuuuuoooooiiiiieeeeeaaaaa\nqwrtysdfghjklzxcvbnmplmjk\n", "output": "No\n"}, {"input": "abd\ncab\n", "output": "No\n"}, {"input": "oujhgi\nabklpoooeitididisicmdmscdcdsa\n", "output": "No\n"}, {"input": "bk\nka\n", "output": "No\n"}, {"input": "anne\nnnea\n", "output": "No\n"}, {"input": "b\naa\n", "output": "No\n"}, {"input": "abcdef\nddaebf\n", "output": "No\n"}, {"input": "aaab\nabaa\n", "output": "No\n"}, {"input": "aq\naq\n", "output": "Yes\n"}, {"input": "aqt\ntor\n", "output": "No\n"}, {"input": "eeiaoouoouaiaiizjgkmwdqsgvqltfylymtdfrggphtfcaieiuueouaeieeiuuieuieaaeueiaeuaaiuiauueuiuieeaaoudymrtstxqsa\nuttwfbdhrmgeeiueeiauoioeiueeoooeoeoiueuoiueuuaeauiiuaaeoeoeuewhrhdykcyqqmyqljwkpcslxcnspfzteeuaieiaaauiiuo\n", "output": "No\n"}, {"input": "ab\n`\n", "output": "No\n"}, {"input": "ab\naa\n", "output": "No\n"}, {"input": "abc\nde\n", "output": "No\n"}, {"input": "def\ncba\n", "output": "No\n"}, {"input": "abcde\nbcafd\n", "output": "No\n"}, {"input": "az\nzb\n", "output": "No\n"}, {"input": "cba\ndef\n", "output": "No\n"}, {"input": "u\ne\n", "output": "Yes\n"}, {"input": "z\nn\n", "output": "Yes\n"}, {"input": "zdfouibgjjjkjkkkklllllalllalas\nkfuoagtr\n", "output": "No\n"}, {"input": "dkjsafhdlgfkjhdsgklhfjaghlfkdfjghfjhgldhfgkjlhksdhgkjdshfhgkjashgfshah\nahsfghsajkghfhsdjkghdskhljkgfhdlghjfhgjfdkflhgajfhlkgsdhjkfgldhfasjkd\n", "output": "No\n"}, {"input": "baba\nbaba\n", "output": "Yes\n"}, {"input": "`km\nua\n", "output": "No\n"}, {"input": "abc\nmku\n", "output": "No\n"}, {"input": "`acdef\ncdabef\n", "output": "No\n"}, {"input": "dcbaa\ndaacb\n", "output": "No\n"}, {"input": "abba\nabab\n", "output": "No\n"}, {"input": "zenudggmyopddhszhrbmftgzmjorabhgojdtfnzxjkayjlkgczsyshczutkdchiytqlfsevymipufxkxojlvkkqxvjhpjmcxeiluua\nelojefhyvzyvnxopynqioauqyeylctwgybaghyykwtlesaujnkishekibxihgtkkiieilrtagzitkypdocbvysnkvwzplhpjwidclb\n", "output": "No\n"}, {"input": "oehjeh\naedcouklbbbcccvfgjkl\n", "output": "No\n"}, {"input": "abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbcbbbbbbbbbbbbb\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbabbbbbbbbbb\n", "output": "No\n"}, {"input": "ma\nam\n", "output": "No\n"}, {"input": "aab\naa\n", "output": "No\n"}, {"input": "abceeeghikl\njhg\n", "output": "No\n"}, {"input": "bcc\niea\n", "output": "No\n"}, {"input": "abac\nbbaa\n", "output": "No\n"}, {"input": "cdba\na\n", "output": "No\n"}, {"input": "eieoiiieaiuiiauieeuoueeoudljpjrpxdtqkrdfmhktpqrnkmyggywglpfpfmhrbaiioeuaieaouaoioaiuoiuueuaoouaeeoaaaueauueeiuaueuaeouiaaaieeaeiuouoiooauuoeauaiaoouuauuuuocqschpcxrxrgrcsjmwcbyfvtdxqtwha\naoeaoaoueieeioooiapoeoeoitvplxwkprykbhvxylcnxrhpgqclyjgfpzdpqwlcvpuooeueoouieioeuouieoaaueuiiiaeoiaeueoiaioaioauiuuuuiaieauaeaieeeueouaeoaoeouuoioaaooaeiiopwbyvkywxvqqtxnzpswdwtzywfpslju\n", "output": "No\n"}, {"input": "aa`\naaabb\n", "output": "No\n"}, {"input": "acab\naaba\n", "output": "No\n"}, {"input": "bca\ncde\n", "output": "Yes\n"}, {"input": "mbu\nua\n", "output": "No\n"}, {"input": "aaaaaeeeeeiiiihooooouuuuu\nuoieauoieauoieauoieauoiea\n", "output": "No\n"}, {"input": "baaa\nbbaa\n", "output": "No\n"}, {"input": "abacbb\nbbbaaa\n", "output": "No\n"}, {"input": "aaa\ncaa\n", "output": "No\n"}, {"input": "f\nj\n", "output": "Yes\n"}, {"input": "`ba\nba`\n", "output": "No\n"}, {"input": "bcaa\naaabbb\n", "output": "No\n"}, {"input": "bc\na\n", "output": "No\n"}, {"input": "cba\ncab\n", "output": "No\n"}, {"input": "uuuuuoooooiiiiieeeeeaaaaa\nqwstysdfghjklzxcvbnmplmjk\n", "output": "No\n"}, {"input": "bbd\ncab\n", "output": "No\n"}, {"input": "ighjuo\nabklpoooeitididisicmdmscdcdsa\n", "output": "No\n"}, {"input": "bk\nkb\n", "output": "Yes\n"}, {"input": "anne\nnena\n", "output": "No\n"}, {"input": "b\n`a\n", "output": "No\n"}, {"input": "abcdef\nfdaebd\n", "output": "No\n"}, {"input": "aabb\nabaa\n", "output": "No\n"}, {"input": "aq\nap\n", "output": "Yes\n"}, {"input": "apt\ntor\n", "output": "No\n"}, {"input": "eeiaoouoouaiaiizjgkmwdqsgvqltfylymtdfrggphtfcaieiuueouaeieeiuuieuieaaeueiaeuaaiuiauueuiuieeaaoudymrtstxqsa\nuttwfbdhrmgeeiueeiauoioeiueeoooeoeoiueuoiueuuaeauiiuaaeoeoeuewhrhdykcyqqmyqljwkpcslxcnspfzteeuaieia`auiiuo\n", "output": "No\n"}, {"input": "bb\n`\n", "output": "No\n"}, {"input": "ba\naa\n", "output": "No\n"}, {"input": "abc\nee\n", "output": "No\n"}, {"input": "cef\ncba\n", "output": "No\n"}, {"input": "abcde\ndfacb\n", "output": "No\n"}, {"input": "za\nzb\n", "output": "No\n"}, {"input": "cba\ndff\n", "output": "No\n"}, {"input": "v\ne\n", "output": "No\n"}]}, "problem_space_curve_coefficient_list": [296.0, 164.0, 164.0, 113.0, 113.0, 113.0, 113.0, 112.0, 112.0, 112.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 111.0, 107.0, 106.0, 106.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 105.0, 87.0, 75.0, 66.0, 60.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 59.0, 56.0, 56.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 54.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 53.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 52.0, 47.0, 46.0, 23.0, 16.0, 16.0, 7.0, 7.0, 1.0], "human_label": true, "framework_note": ""}, "O(n+m)": {"problem_name": "1111_A. Superhero Transformation", "problem_id": "2436", "solution_id": "2436_787", "description": "We all know that a superhero can transform to certain other superheroes. But not all Superheroes can transform to any other superhero. A superhero with name s can transform to another superhero with name t if s can be made equal to t by changing any vowel in s to any other vowel and any consonant in s to any other consonant. Multiple changes can be made.\n\nIn this problem, we consider the letters 'a', 'e', 'i', 'o' and 'u' to be vowels and all the other letters to be consonants.\n\nGiven the names of two superheroes, determine if the superhero with name s can be transformed to the Superhero with name t.\n\nInput\n\nThe first line contains the string s having length between 1 and 1000, inclusive.\n\nThe second line contains the string t having length between 1 and 1000, inclusive.\n\nBoth strings s and t are guaranteed to be different and consist of lowercase English letters only.\n\nOutput\n\nOutput \"Yes\" (without quotes) if the superhero with name s can be transformed to the superhero with name t and \"No\" (without quotes) otherwise.\n\nYou can print each letter in any case (upper or lower).\n\nExamples\n\nInput\n\n\na\nu\n\n\nOutput\n\n\nYes\n\n\nInput\n\n\nabc\nukm\n\n\nOutput\n\n\nYes\n\n\nInput\n\n\nakm\nua\n\n\nOutput\n\n\nNo\n\nNote\n\nIn the first sample, since both 'a' and 'u' are vowels, it is possible to convert string s to t.\n\nIn the third sample, 'k' is a consonant, whereas 'a' is a vowel, so it is not possible to convert string s to t.", "solution_code": "l1=list(input())\nl2=list(input())\na=['a','e','i','o','u']\nif len(l1)!=len(l2):\n    \n    print('No')\n\nelse:\n    i=0\n    z=0\n    while i<len(l1):\n        if l1[i] in a and l2[i] in a:\n            z=z+1\n        elif  l1[i] not in a and l2[i] not in a:\n            z=z+1\n        i=i+1\n    if z==len(l1):\n        print('Yes')\n    else:\n        print(\"No\")\n        \n", "dataclass_code": "import sys\nimport time\nimport itertools\nfrom itertools import accumulate, product, permutations, combinations\nimport collections\nfrom collections import Counter, OrderedDict, deque, defaultdict, ChainMap\nfrom functools import lru_cache\nimport math\nfrom math import sqrt, sin, cos, tan, ceil, fabs, floor, gcd, exp, log, log2\nimport fractions\nfrom typing import List, Tuple\nimport numpy as np\nimport random\nimport heapq\nfrom heapq import *\nfrom dataclasses import dataclass\n\nimport builtins\nimport re\n\ndef strip(s, characters = None):\n    if characters is None:\n        characters = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n    else:\n        characters = list(characters)\n\n    characters = [x for x in characters if len(x) > 0] \n\n    i = 0\n    while i < len(s):\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[i:i + len(sep_candidate)] == sep_candidate:\n                found_sep_candidate = True\n                i += len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    j = len(s) - 1\n    while j >= 0:\n        found_sep_candidate = False\n\n        for sep_candidate in characters:\n            if s[j + 1 - len(sep_candidate):j+1] == sep_candidate:\n                found_sep_candidate = True\n                j -= len(sep_candidate)\n                break\n\n        if not found_sep_candidate:\n            break\n\n    return s[i:j+1]\n\ndef split(s, sep=None, maxsplit=-1):\n    if sep == '':\n        raise builtins.ValueError('empty separator')\n\n    if type(sep) == list and '' in sep:\n        raise builtins.ValueError('empty separator')\n\n    if sep is None:\n        sep = [' ', '\\t', '\\n', '\\r', '\\v', '\\f']\n        result = []\n        word = ''\n        count_split = 0\n        \n        if maxsplit == -1:\n            maxsplit = len(s) * 1000\n\n        i = 0\n        while i < len(s):\n            found_sep_candidate = False\n\n            for sep_candidate in sep:\n                if s[i:i + len(sep_candidate)] == sep_candidate:\n                    found_sep_candidate = True\n\n                    if word:\n                        result.append(word)\n                        count_split += 1\n                        word = ''\n\n                    i += len(sep_candidate)\n                    break\n\n            if not found_sep_candidate and count_split < maxsplit:\n                word += s[i]\n                i += 1\n\n            elif not found_sep_candidate and count_split >= maxsplit:\n                word += s[i:]\n                i = len(s)\n\n        if word:\n            result.append(word)\n        return result\n    \n    if type(sep) == str:\n        sep = [sep]\n\n    if maxsplit == -1:\n        maxsplit = 0\n    elif maxsplit == 0:\n        maxsplit = -1\n\n    return re.split(re.compile(\"|\".join([re.escape(x) for x in sep])), s, maxsplit=maxsplit)\n\nclass str_escaped(str):\n    def split(self, sep=None, maxsplit=-1):\n        return split(self, sep=sep, maxsplit=maxsplit)\n    \n    def strip(self, chars=None):\n        return strip(self, characters = chars)\n\nfrom dataclasses import dataclass\n\n@dataclass\nclass Input:\n    a: str\n    b: str\n\n    @classmethod\n    def from_str(cls, input_: str):\n        a, b, _ = input_.split('\\n')\n        return cls(a, b)\n\n    def __repr__(self):\n        return self.a + '\\n' + self.b + '\\n'\n", "inputs_example": "akm\nua\n", "space_complexity_inferred": "O(n+m)", "space_curve_coefficient": 24.019176136363637, "tests": {"public_tests": [{"input": "akm\nua\n", "output": "No\n"}, {"input": "a\nu\n", "output": "YES\n"}, {"input": "abc\nukm\n", "output": "YES\n"}], "private_tests": [{"input": "b\na\n", "output": "NO\n"}, {"input": "abcdef\ncdabef\n", "output": "NO\n"}, {"input": "ka\nak\n", "output": "NO\n"}, {"input": "aabcd\nbcaad\n", "output": "NO\n"}, {"input": "aabb\nabab\n", "output": "NO\n"}, {"input": "zenudggmyopddhszhrbmftgzmjorabhgojdtfnzxjkayjlkgczsyshczutkdchiytqlfsevymipufxkxojlvkkqxvjhpjmcxeiluua\nblcdiwjphlpzwvknsyvbcodpyktizgatrlieiikktghixbikehsiknjuateltwkyyhgabygwtclyeyquaoiqnypoxnvyzvyhfejole\n", "output": "NO\n"}, {"input": "oihjee\naedcouklbbbcccvfgjkl\n", "output": "No\n"}, {"input": "abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n", "output": "NO\n"}, {"input": "am\nma\n", "output": "NO\n"}, {"input": "aaa\naa\n", "output": "No\n"}, {"input": "abcdefghikl\njhg\n", "output": "No\n"}, {"input": "bcd\naei\n", "output": "NO\n"}, {"input": "abab\naabb\n", "output": "NO\n"}, {"input": "abcd\na\n", "output": "No\n"}, {"input": "eieoiiieaiuiiauieeuoueeoudljpjrpxdtqkrdfmhktpqrnkmyggywglpfpfmhrbaiioeuaieaouaoioaiuoiuueuaoouaeeoaaaueauueeiuaueuaeouiaaaieeaeiuouoiooauuoeauaiaoouuauuuuocqschpcxrxrgrcsjmwcbyfvtdxqtwha\naoeaoaoueieeioooiaooeoeoitvplxwkprykbhvxylcnxrhpgqclyjgfpzdpqwlcvouooeueoouieioeuouieoaaueuiiiaeoiaeueoiaioaioauiuuuuiaieauaeaieeeueouaeoaoeouuoioaaooaeiiopwbyvkywxvqqtxnzpswdwtzywfpslju\n", "output": "YES\n"}, {"input": "abc\nkmu\n", "output": "NO\n"}, {"input": "aaa\naaabb\n", "output": "No\n"}, {"input": "abaa\naaba\n", "output": "NO\n"}, {"input": "abc\ncde\n", "output": "NO\n"}, {"input": "uam\nua\n", "output": "No\n"}, {"input": "aaaaaeeeeeiiiiiooooouuuuu\naeiouaeiouaeiouaeiouaeiou\n", "output": "YES\n"}, {"input": "aabb\nbbaa\n", "output": "NO\n"}, {"input": "aaabbb\nbbbaaa\n", "output": "NO\n"}, {"input": "aab\nbaa\n", "output": "NO\n"}, {"input": "f\nk\n", "output": "YES\n"}, {"input": "aba\nbaa\n", "output": "NO\n"}, {"input": "ba\nab\n", "output": "NO\n"}, {"input": "aabb\naaabbb\n", "output": "No\n"}, {"input": "bb\nb\n", "output": "No\n"}, {"input": "abc\nbca\n", "output": "NO\n"}, {"input": "aaaaaeeeeeiiiiiooooouuuuu\nqwrtysdfghjklzxcvbnmplmjk\n", "output": "NO\n"}, {"input": "abc\ncab\n", "output": "NO\n"}, {"input": "oujhgi\nabklpoooeisididisicmdmscdcdsa\n", "output": "No\n"}, {"input": "ak\nka\n", "output": "NO\n"}, {"input": "anne\nnnae\n", "output": "NO\n"}, {"input": "a\naa\n", "output": "No\n"}, {"input": "abcdef\ncdaebf\n", "output": "NO\n"}, {"input": "aaba\nabaa\n", "output": "NO\n"}, {"input": "aq\nqa\n", "output": "NO\n"}, {"input": "art\ntor\n", "output": "NO\n"}, {"input": "eeiaoouoouaiaiizjgkmwdqsgvqltfylymtdfrggphtfcaieiuueouaeieeiuuieuieaaeueiaeuaaiuiauueuiuieeaaoudymrtstxqsa\nouiiuaaaieiaueetzfpsncxlscpkwjlqymqqyckydhrhweueoeoeaauiiuaeauueuioueuioeoeoooeeuieoiouaieeuieegmrhdbfwttu\n", "output": "YES\n"}, {"input": "ab\na\n", "output": "No\n"}, {"input": "ab\nba\n", "output": "NO\n"}, {"input": "abc\ned\n", "output": "No\n"}, {"input": "def\nabc\n", "output": "NO\n"}, {"input": "abcde\nbcaed\n", "output": "NO\n"}, {"input": "az\nza\n", "output": "NO\n"}, {"input": "abc\ndef\n", "output": "NO\n"}, {"input": "u\nd\n", "output": "NO\n"}, {"input": "z\no\n", "output": "NO\n"}, {"input": "zdfouibgjjjkjkkkklllllalllalas\nrtgaoufk\n", "output": "No\n"}, {"input": "dkjsafhdlgfkjhdsgklhfjaghlfkdfjghfjhgldhfgkjlhksdhgkjdshfhgkjashgfshah\ndkjsafhdlgfkjhdsgklhfjaghlfkdfjghfjhgldhfgkjlhksdhgkjdshfhgkjashgfsha\n", "output": "No\n"}, {"input": "abab\nbaba\n", "output": "NO\n"}], "generated_tests": [{"input": "a\na\n", "output": "Yes\n"}, {"input": "`bcdef\ncdabef\n", "output": "No\n"}, {"input": "ka\n`k\n", "output": "No\n"}, {"input": "dcbaa\nbcaad\n", "output": "No\n"}, {"input": "abab\nabab\n", "output": "Yes\n"}, {"input": "zenudggmyopddhszhrbmftgzmjorabhgojdtfnzxjkayjlkgczsyshczutkdchiytqlfsevymipufxkxojlvkkqxvjhpjmcxeiluua\nblcdiwjphlpzwvknsyvbcodpyktizgatrlieiikktghixbikehsiknjuaseltwkyyhgabygwtclyeyquaoiqnypoxnvyzvyhfejole\n", "output": "No\n"}, {"input": "oehjei\naedcouklbbbcccvfgjkl\n", "output": "No\n"}, {"input": "abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbcbbbbbbbbbbbbb\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n", "output": "No\n"}, {"input": "am\nam\n", "output": "Yes\n"}, {"input": "baa\naa\n", "output": "No\n"}, {"input": "abcdeeghikl\njhg\n", "output": "No\n"}, {"input": "bcd\niea\n", "output": "No\n"}, {"input": "abab\nbbaa\n", "output": "No\n"}, {"input": "abdc\na\n", "output": "No\n"}, {"input": "eieoiiieaiuiiauieeuoueeoudljpjrpxdtqkrdfmhktpqrnkmyggywglpfpfmhrbaiioeuaieaouaoioaiuoiuueuaoouaeeoaaaueauueeiuaueuaeouiaaaieeaeiuouoiooauuoeauaiaoouuauuuuocqschpcxrxrgrcsjmwcbyfvtdxqtwha\naoeaoaoueieeioooiapoeoeoitvplxwkprykbhvxylcnxrhpgqclyjgfpzdpqwlcvouooeueoouieioeuouieoaaueuiiiaeoiaeueoiaioaioauiuuuuiaieauaeaieeeueouaeoaoeouuoioaaooaeiiopwbyvkywxvqqtxnzpswdwtzywfpslju\n", "output": "No\n"}, {"input": "abc\nkmv\n", "output": "No\n"}, {"input": "`aa\naaabb\n", "output": "No\n"}, {"input": "acaa\naaba\n", "output": "No\n"}, {"input": "bac\ncde\n", "output": "No\n"}, {"input": "mau\nua\n", "output": "No\n"}, {"input": "aaaaaeeeeeiiiihooooouuuuu\naeiouaeiouaeiouaeiouaeiou\n", "output": "No\n"}, {"input": "aaab\nbbaa\n", "output": "No\n"}, {"input": "aaacbb\nbbbaaa\n", "output": "No\n"}, {"input": "aab\ncaa\n", "output": "No\n"}, {"input": "g\nk\n", "output": "Yes\n"}, {"input": "aba\nba`\n", "output": "No\n"}, {"input": "b`\nab\n", "output": "No\n"}, {"input": "bbaa\naaabbb\n", "output": "No\n"}, {"input": "bb\na\n", "output": "No\n"}, {"input": "abc\nacb\n", "output": "Yes\n"}, {"input": "uuuuuoooooiiiiieeeeeaaaaa\nqwrtysdfghjklzxcvbnmplmjk\n", "output": "No\n"}, {"input": "abd\ncab\n", "output": "No\n"}, {"input": "oujhgi\nabklpoooeitididisicmdmscdcdsa\n", "output": "No\n"}, {"input": "bk\nka\n", "output": "No\n"}, {"input": "anne\nnnea\n", "output": "No\n"}, {"input": "b\naa\n", "output": "No\n"}, {"input": "abcdef\nddaebf\n", "output": "No\n"}, {"input": "aaab\nabaa\n", "output": "No\n"}, {"input": "aq\naq\n", "output": "Yes\n"}, {"input": "aqt\ntor\n", "output": "No\n"}, {"input": "eeiaoouoouaiaiizjgkmwdqsgvqltfylymtdfrggphtfcaieiuueouaeieeiuuieuieaaeueiaeuaaiuiauueuiuieeaaoudymrtstxqsa\nuttwfbdhrmgeeiueeiauoioeiueeoooeoeoiueuoiueuuaeauiiuaaeoeoeuewhrhdykcyqqmyqljwkpcslxcnspfzteeuaieiaaauiiuo\n", "output": "No\n"}, {"input": "ab\n`\n", "output": "No\n"}, {"input": "ab\naa\n", "output": "No\n"}, {"input": "abc\nde\n", "output": "No\n"}, {"input": "def\ncba\n", "output": "No\n"}, {"input": "abcde\nbcafd\n", "output": "No\n"}, {"input": "az\nzb\n", "output": "No\n"}, {"input": "cba\ndef\n", "output": "No\n"}, {"input": "u\ne\n", "output": "Yes\n"}, {"input": "z\nn\n", "output": "Yes\n"}, {"input": "zdfouibgjjjkjkkkklllllalllalas\nkfuoagtr\n", "output": "No\n"}, {"input": "dkjsafhdlgfkjhdsgklhfjaghlfkdfjghfjhgldhfgkjlhksdhgkjdshfhgkjashgfshah\nahsfghsajkghfhsdjkghdskhljkgfhdlghjfhgjfdkflhgajfhlkgsdhjkfgldhfasjkd\n", "output": "No\n"}, {"input": "baba\nbaba\n", "output": "Yes\n"}, {"input": "`km\nua\n", "output": "No\n"}, {"input": "abc\nmku\n", "output": "No\n"}, {"input": "`acdef\ncdabef\n", "output": "No\n"}, {"input": "dcbaa\ndaacb\n", "output": "No\n"}, {"input": "abba\nabab\n", "output": "No\n"}, {"input": "zenudggmyopddhszhrbmftgzmjorabhgojdtfnzxjkayjlkgczsyshczutkdchiytqlfsevymipufxkxojlvkkqxvjhpjmcxeiluua\nelojefhyvzyvnxopynqioauqyeylctwgybaghyykwtlesaujnkishekibxihgtkkiieilrtagzitkypdocbvysnkvwzplhpjwidclb\n", "output": "No\n"}, {"input": "oehjeh\naedcouklbbbcccvfgjkl\n", "output": "No\n"}, {"input": "abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbcbbbbbbbbbbbbb\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbabbbbbbbbbb\n", "output": "No\n"}, {"input": "ma\nam\n", "output": "No\n"}, {"input": "aab\naa\n", "output": "No\n"}, {"input": "abceeeghikl\njhg\n", "output": "No\n"}, {"input": "bcc\niea\n", "output": "No\n"}, {"input": "abac\nbbaa\n", "output": "No\n"}, {"input": "cdba\na\n", "output": "No\n"}, {"input": "eieoiiieaiuiiauieeuoueeoudljpjrpxdtqkrdfmhktpqrnkmyggywglpfpfmhrbaiioeuaieaouaoioaiuoiuueuaoouaeeoaaaueauueeiuaueuaeouiaaaieeaeiuouoiooauuoeauaiaoouuauuuuocqschpcxrxrgrcsjmwcbyfvtdxqtwha\naoeaoaoueieeioooiapoeoeoitvplxwkprykbhvxylcnxrhpgqclyjgfpzdpqwlcvpuooeueoouieioeuouieoaaueuiiiaeoiaeueoiaioaioauiuuuuiaieauaeaieeeueouaeoaoeouuoioaaooaeiiopwbyvkywxvqqtxnzpswdwtzywfpslju\n", "output": "No\n"}, {"input": "aa`\naaabb\n", "output": "No\n"}, {"input": "acab\naaba\n", "output": "No\n"}, {"input": "bca\ncde\n", "output": "Yes\n"}, {"input": "mbu\nua\n", "output": "No\n"}, {"input": "aaaaaeeeeeiiiihooooouuuuu\nuoieauoieauoieauoieauoiea\n", "output": "No\n"}, {"input": "baaa\nbbaa\n", "output": "No\n"}, {"input": "abacbb\nbbbaaa\n", "output": "No\n"}, {"input": "aaa\ncaa\n", "output": "No\n"}, {"input": "f\nj\n", "output": "Yes\n"}, {"input": "`ba\nba`\n", "output": "No\n"}, {"input": "bcaa\naaabbb\n", "output": "No\n"}, {"input": "bc\na\n", "output": "No\n"}, {"input": "cba\ncab\n", "output": "No\n"}, {"input": "uuuuuoooooiiiiieeeeeaaaaa\nqwstysdfghjklzxcvbnmplmjk\n", "output": "No\n"}, {"input": "bbd\ncab\n", "output": "No\n"}, {"input": "ighjuo\nabklpoooeitididisicmdmscdcdsa\n", "output": "No\n"}, {"input": "bk\nkb\n", "output": "Yes\n"}, {"input": "anne\nnena\n", "output": "No\n"}, {"input": "b\n`a\n", "output": "No\n"}, {"input": "abcdef\nfdaebd\n", "output": "No\n"}, {"input": "aabb\nabaa\n", "output": "No\n"}, {"input": "aq\nap\n", "output": "Yes\n"}, {"input": "apt\ntor\n", "output": "No\n"}, {"input": "eeiaoouoouaiaiizjgkmwdqsgvqltfylymtdfrggphtfcaieiuueouaeieeiuuieuieaaeueiaeuaaiuiauueuiuieeaaoudymrtstxqsa\nuttwfbdhrmgeeiueeiauoioeiueeoooeoeoiueuoiueuuaeauiiuaaeoeoeuewhrhdykcyqqmyqljwkpcslxcnspfzteeuaieia`auiiuo\n", "output": "No\n"}, {"input": "bb\n`\n", "output": "No\n"}, {"input": "ba\naa\n", "output": "No\n"}, {"input": "abc\nee\n", "output": "No\n"}, {"input": "cef\ncba\n", "output": "No\n"}, {"input": "abcde\ndfacb\n", "output": "No\n"}, {"input": "za\nzb\n", "output": "No\n"}, {"input": "cba\ndff\n", "output": "No\n"}, {"input": "v\ne\n", "output": "No\n"}]}, "problem_space_curve_coefficient_list": [133.07369973776224, 109.08215417395105, 73.73481206293707, 73.7219187062937, 59.06091564685315, 50.15734265734266, 50.15166083916084, 50.1486833479021, 49.07867132867133, 49.07227928321678, 49.07085882867133, 48.01442307692308, 47.99147727272727, 43.93886582167832, 28.073699737762237, 27.0, 25.105222902097903, 25.10423951048951, 25.102040537587413, 25.07867132867133, 25.07867132867133, 25.07867132867133, 25.07867132867133, 25.07867132867133, 25.07867132867133, 25.07867132867133, 25.07867132867133, 25.07867132867133, 25.07867132867133, 25.075215799825173, 25.075120192307693, 25.074409965034967, 25.074328015734267, 25.07371339597902, 25.073699737762237, 25.073699737762237, 25.073604130244757, 25.07298951048951, 25.072279283216783, 25.072279283216783, 25.071910511363637, 25.071446131993007, 25.07141881555944, 25.071091018356643, 25.07085882867133, 25.07085882867133, 25.07085882867133, 25.07085882867133, 25.070708588286713, 25.069943728146853, 25.069916411713287, 25.06980714597902, 25.069438374125873, 25.067020869755243, 25.06517701048951, 25.063756555944057, 25.050876857517483, 24.054578234265733, 24.054578234265733, 24.054578234265733, 24.049497377622377, 24.029010052447553, 24.026059877622377, 24.025568181818183, 24.025568181818183, 24.025568181818183, 24.025458916083917, 24.02534965034965, 24.0234375, 24.019176136363637, 24.017646416083917, 24.017168378496503, 24.01405430506993, 24.011309003496503, 24.011309003496503, 24.00493061625874, 24.0, 24.0, 24.0, 24.0, 24.0, 24.0, 24.0, 24.0, 24.0, 24.0, 24.0, 24.0, 24.0, 23.999289772727273, 23.999057583041957, 23.999057583041957, 23.998565887237763, 23.997869318181817, 23.997486888111887, 23.997172749125873, 23.99685861013986, 23.996544471153847, 23.996448863636363, 23.99502840909091, 23.99502840909091, 23.99502840909091, 23.99502840909091, 23.993607954545453, 23.993485030594407, 23.99317089160839, 23.992897727272727, 23.9921875, 23.9921875, 23.991135817307693, 23.989674388111887, 23.98725688374126, 23.98721590909091, 23.986601289335663, 23.986505681818183, 10.175426136363637, 5.419744318181818, 5.400568181818182, 3.0260598776223775, 3.0255681818181817, 3.02462576486014, 3.0121421547202796, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 2.999289772727273, 2.9943591564685317, 2.9943591564685317, 2.9943181818181817, 2.99337576486014, 2.9933621066433567, 2.9922011582167833, 2.9919006774475525, 2.991245083041958, 2.989237325174825, 2.98709298513986, 2.9857954545454546], "human_label": true, "framework_note": ""}}}